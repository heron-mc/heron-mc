/*
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

Ext.namespace("Heron.i18n");function __(string){var dict=Heron.i18n.dict;if(typeof(dict)!='undefined'&&dict[string]){return dict[string];}
return string;}
if(!Ext.grid.GridView.prototype.templates){Ext.grid.GridView.prototype.templates={};}
Ext.grid.GridView.prototype.templates.cell=new Ext.Template('<td class="x-grid3-col x-grid3-cell x-grid3-td-{id} x-selectable {css}" style="{style}" tabIndex="0" {cellAttr}>','<div class="x-grid3-cell-inner x-grid3-col-{id}" {attr}>{value}</div>','</td>');OpenLayers.Util.extend(OpenLayers.Format.WFST.v1.prototype.namespaces,{gml32:'http://www.opengis.net/gml/3.2'});OpenLayers.Format.Atom.prototype.parseLocations=function(node){var georssns=this.namespaces.georss;var locations={components:[]};var where=this.getElementsByTagNameNS(node,georssns,"where");if(where&&where.length>0){if(!this.gmlParser){this.initGmlParser();}
for(var i=0,ii=where.length;i<ii;i++){this.gmlParser.readChildNodes(where[i],locations);}}
var components=locations.components;var point=this.getElementsByTagNameNS(node,georssns,"point");if(point&&point.length>0){for(var i=0,ii=point.length;i<ii;i++){var xy=OpenLayers.String.trim(point[i].firstChild.nodeValue).split(/\s+/);if(xy.length!=2){xy=OpenLayers.String.trim(point[i].firstChild.nodeValue).split(/\s*,\s*/);}
components.push(new OpenLayers.Geometry.Point(xy[1],xy[0]));}}
var line=this.getElementsByTagNameNS(node,georssns,"line");if(line&&line.length>0){var coords;var p;var points;for(var i=0,ii=line.length;i<ii;i++){coords=OpenLayers.String.trim(line[i].firstChild.nodeValue).split(/\s+/);points=[];for(var j=0,jj=coords.length;j<jj;j+=2){p=new OpenLayers.Geometry.Point(coords[j+1],coords[j]);points.push(p);}
components.push(new OpenLayers.Geometry.LineString(points));}}
var polygon=this.getElementsByTagNameNS(node,georssns,"polygon");if(polygon&&polygon.length>0){var coords;var p;var points;for(var i=0,ii=polygon.length;i<ii;i++){coords=OpenLayers.String.trim(polygon[i].firstChild.nodeValue).split(/\s+/);points=[];for(var j=0,jj=coords.length;j<jj;j+=2){p=new OpenLayers.Geometry.Point(coords[j+1],coords[j]);points.push(p);}
components.push(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing(points)]));}}
if(this.internalProjection&&this.externalProjection){for(var i=0,ii=components.length;i<ii;i++){if(components[i]){components[i].transform(this.externalProjection,this.internalProjection);}}}
return components;};OpenLayers.Util.modifyDOMElement=function(element,id,px,sz,position,border,overflow,opacity){if(id){element.id=id;}
if(px){if(!px.x){px.x=0;}
if(!px.y){px.y=0;}
element.style.left=px.x+"px";element.style.top=px.y+"px";}
if(sz){element.style.width=sz.w+"px";element.style.height=sz.h+"px";}
if(position){element.style.position=position;}
if(border){element.style.border=border;}
if(overflow){element.style.overflow=overflow;}
if(parseFloat(opacity)>=0.0&&parseFloat(opacity)<1.0){element.style.filter='alpha(opacity='+(opacity*100)+')';element.style.opacity=opacity;}else if(parseFloat(opacity)==1.0){element.style.filter='';element.style.opacity='';}};Ext.override(GeoExt.WMSLegend,{getLegendUrl:function(layerName,layerNames){var rec=this.layerRecord;var url;var styles=rec&&rec.get("styles");var layer=rec.getLayer();layerNames=layerNames||[layer.params.LAYERS].join(",").split(",");var styleNames=layer.params.STYLES&&[layer.params.STYLES].join(",").split(",");var idx=layerNames.indexOf(layerName);var styleName=styleNames&&styleNames[idx];if(styles&&styles.length>0){if(styleName){Ext.each(styles,function(s){url=(s.name==styleName&&s.legend)&&s.legend.href;return!url;});}else if(this.defaultStyleIsFirst===true&&!styleNames&&!layer.params.SLD&&!layer.params.SLD_BODY){url=styles[0].legend&&styles[0].legend.href;}}
if(!url){url=layer.getFullRequestString({REQUEST:"GetLegendGraphic",WIDTH:null,HEIGHT:null,EXCEPTIONS:"application/vnd.ogc.se_xml",LAYER:layerName,LAYERS:null,STYLE:(styleName!=='')?styleName:null,STYLES:null,SRS:null,FORMAT:null,TIME:null});}
var params=Ext.apply({},this.baseParams);if(layer.params._OLSALT){params._OLSALT=layer.params._OLSALT;}
url=Ext.urlAppend(url,Ext.urlEncode(params));if(url.toLowerCase().indexOf("request=getlegendgraphic")!=-1){if(url.toLowerCase().indexOf("format=")==-1){url=Ext.urlAppend(url,"FORMAT=image%2Fgif");}
if(this.useScaleParameter===true){var scale=layer.map.getScale();url=Ext.urlAppend(url,"SCALE="+scale);}}
return url;}});Ext.override(GeoExt.tree.LayerNodeUI,{enforceOneVisible:function(){var attributes=this.node.attributes;var group=attributes.checkedGroup;if(group&&group!=="gx_baselayer"){var layer=this.node.layer;if(attributes.checked){var checkedNodes=this.node.getOwnerTree().getChecked();var checkedCount=0;Ext.each(checkedNodes,function(n){var l=n.layer;if(!n.hidden&&n.attributes.checkedGroup===group){checkedCount++;if(l!=layer&&attributes.checked){l.setVisibility(false);}}});if(checkedCount===0&&attributes.checked==false){layer.setVisibility(true);}}}}});Ext.override(GeoExt.tree.LayerNode,{renderX:function(bulkRender){var layer=this.layer instanceof OpenLayers.Layer&&this.layer;if(!layer){if(!this.layerStore||this.layerStore=="auto"){this.layerStore=GeoExt.MapPanel.guess().layers;}
var i=this.layerStore.findBy(function(o){return o.get("title")==this.layer;},this);if(i!=-1){layer=this.layerStore.getAt(i).getLayer();}}
if(!this.rendered||!layer){var ui=this.getUI();if(layer){this.layer=layer;if(layer.isBaseLayer){this.draggable=false;this.disabled=true;}
this.autoDisable=!(this.autoDisable===false||this.layer.isBaseLayer||this.layer.alwaysInRange);if(!this.text){this.text=layer.name;}
ui.show();this.addVisibilityEventHandlers();}else{ui.hide();}
if(this.layerStore instanceof GeoExt.data.LayerStore){this.addStoreEventHandlers(layer);}}
GeoExt.tree.LayerNode.superclass.render.apply(this,arguments);}});Ext.namespace("Heron");Heron.singleFile=true;Ext.namespace("Heron");Ext.namespace("Heron.globals");Heron.globals={serviceUrl:'/cgi-bin/heron.cgi',version:'0.71',imagePath:undefined};try{Proj4js.defs["EPSG:28992"]="+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.999908 +x_0=155000 +y_0=463000 +ellps=bessel +units=m +towgs84=565.2369,50.0087,465.658,-0.406857330322398,0.350732676542563,-1.8703473836068,4.0812 +no_defs";}catch(err){}
Heron.App=function(){var topComponent,map,mapPanel;return{create:function(){Ext.QuickTips.init();if(Heron.layout.renderTo||Heron.layout.xtype=='window'){topComponent=Ext.create(Heron.layout);}else{topComponent=new Ext.Viewport({id:"hr-topComponent",layout:"fit",hideBorders:true,items:[Heron.layout]});}},show:function(){topComponent.show();},getMap:function(){return map;},setMap:function(aMap){map=aMap;},getMapPanel:function(){return mapPanel;},setMapPanel:function(aMapPanel){mapPanel=aMapPanel;}};}();Ext.namespace("Heron");Ext.onReady(function(){if(!Heron.noAutoLaunch){Heron.App.create();Heron.App.show();}},Heron.App);Ext.namespace("Heron.Utils");Ext.namespace("Heron.globals");Heron.Utils=(function(){var browserWindows=new Array();var openMsgURL='http://extjs.cachefly.net/ext-3.4.0/resources/images/default/s.gif';var instance={getScriptLocation:function(){if(!Heron.globals.scriptLoc){Heron.globals.scriptLoc='';var scriptName=(!Heron.singleFile)?"lib/DynLoader.js":"script/Heron.js";var r=new RegExp("(^|(.*?\\/))("+scriptName+")(\\?|$)"),scripts=document.getElementsByTagName('script'),src="";for(var i=0,len=scripts.length;i<len;i++){src=scripts[i].getAttribute('src');if(src){var m=src.match(r);if(m){Heron.globals.scriptLoc=m[1];break;}}}}
return Heron.globals.scriptLoc;},getImagesLocation:function(){return Heron.globals.imagePath||(Heron.Utils.getScriptLocation()+"resources/images/");},getImageLocation:function(image){return Heron.Utils.getImagesLocation()+image;},formatXml:function(xml,htmlEscape){var reg=/(>)(<)(\/*)/g;var wsexp=/ *(.*) +\n/g;var contexp=/(<.+>)(.+\n)/g;xml=xml.replace(reg,'$1\n$2$3').replace(wsexp,'$1\n').replace(contexp,'$1\n$2');var pad=0;var formatted='';var lines=xml.split('\n');var indent=0;var lastType='other';var transitions={'single->single':0,'single->closing':-1,'single->opening':0,'single->other':0,'closing->single':0,'closing->closing':-1,'closing->opening':0,'closing->other':0,'opening->single':1,'opening->closing':0,'opening->opening':1,'opening->other':1,'other->single':0,'other->closing':-1,'other->opening':0,'other->other':0};for(var i=0;i<lines.length;i++){var ln=lines[i];var single=Boolean(ln.match(/<.+\/>/));var closing=Boolean(ln.match(/<\/.+>/));var opening=Boolean(ln.match(/<[^!].*>/));var type=single?'single':closing?'closing':opening?'opening':'other';var fromTo=lastType+'->'+type;lastType=type;var padding='';indent+=transitions[fromTo];for(var j=0;j<indent;j++){padding+='    ';}
if(htmlEscape){ln=ln.replace('<','&lt;');ln=ln.replace('>','&gt;');}
formatted+=padding+ln+'\n';}
return formatted;},openBrowserWindow:function(winName,bReopen,theURL,hasMenubar,hasToolbar,hasAddressbar,hasStatusbar,hasScrollbars,isResizable,hasPos,xPos,yPos,hasSize,wSize,hSize){var x,y;var options="";var pwin=null;if(hasMenubar){options+="menubar=yes";}else{options+="menubar=no";}
if(hasToolbar){options+=",toolbar=yes";}else{options+=",toolbar=no";}
if(hasAddressbar){options+=",location=yes";}else{options+=",location=no";}
if(hasStatusbar){options+=",status=yes";}else{options+=",status=no";}
if(hasScrollbars){options+=",scrollbars=yes";}else{options+=",scrollbars=no";}
if(isResizable){options+=",resizable=yes";}else{options+=",resizable=no";}
if(!hasSize){wSize=640;hSize=480;}
options+=",width="+wSize+",innerWidth="+wSize;options+=",height="+hSize+",innerHeight="+hSize;if(!hasPos){xPos=(screen.width-700)/2;yPos=75;}
options+=",left="+xPos+",top="+yPos;if(bReopen){browserWindows[winName]=window.open(theURL,winName,options);}else{if(!browserWindows[winName]||browserWindows[winName].closed){browserWindows[winName]=window.open(theURL,winName,options);}else{browserWindows[winName].location.href=theURL;}}
browserWindows[winName].focus();}};return(instance);})();Ext.namespace("Heron.data");Heron.data.OpenLS_XLSReader=function(meta,recordType){meta=meta||{};Ext.applyIf(meta,{idProperty:meta.idProperty||meta.idPath||meta.id,successProperty:meta.successProperty||meta.success});Heron.data.OpenLS_XLSReader.superclass.constructor.call(this,meta,recordType||meta.fields);};Ext.extend(Heron.data.OpenLS_XLSReader,Ext.data.XmlReader,{addOptXlsText:function(format,text,node,tagname,sep){var elms=format.getElementsByTagNameNS(node,"http://www.opengis.net/xls",tagname);if(elms){Ext.each(elms,function(elm,index){var str=format.getChildValue(elm);if(str){text=text+sep+str;}});}
return text;},readRecords:function(doc){this.xmlData=doc;var root=doc.documentElement||doc;var records=this.extractData(root);return{success:true,records:records,totalRecords:records.length};},extractData:function(root){var opts={namespaces:{gml:"http://www.opengis.net/gml",xls:"http://www.opengis.net/xls"}};var records=[];var format=new OpenLayers.Format.XML(opts);var addresses=format.getElementsByTagNameNS(root,"http://www.opengis.net/xls",'GeocodedAddress');var recordType=Ext.data.Record.create([{name:"lon",type:"number"},{name:"lat",type:"number"},"text"]);var reader=this;Ext.each(addresses,function(address,index){var pos=format.getElementsByTagNameNS(address,"http://www.opengis.net/gml",'pos');var xy='';if(pos&&pos[0]){xy=format.getChildValue(pos[0]);}
var xyArr=xy.split(' ');var text='';text=reader.addOptXlsText(format,text,address,'Street','');text=reader.addOptXlsText(format,text,address,'Place',',');var values={lon:parseFloat(xyArr[0]),lat:parseFloat(xyArr[1]),text:text};var record=new recordType(values,index);records.push(record);});return records;}});Ext.namespace("Heron.data");Heron.data.DataExporter={formatStore:function(store,config,base64Encode){var formatter=new Ext.ux.Exporter[config.formatter]();var data=formatter.format(store,config);if(base64Encode){data=Base64.encode(data);}
return data;},download:function(data,config){try{Ext.destroy(Ext.get('hr_uploadForm'));}
catch(e){}
var form=Ext.DomHelper.append(document.body,{tag:'form',id:'hr_uploadForm',method:'post',action:Heron.globals.serviceUrl,children:[{tag:'input',type:'hidden',name:'data',value:data},{tag:'input',type:'hidden',name:'filename',value:config.fileName},{tag:'input',type:'hidden',name:'mime',value:config.mimeType}]});document.body.appendChild(form);form.submit();}};var Base64=(function(){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";function utf8Encode(string){string=string.replace(/\r\n/g,"\n");var utftext="";for(var n=0;n<string.length;n++){var c=string.charCodeAt(n);if(c<128){utftext+=String.fromCharCode(c);}
else if((c>127)&&(c<2048)){utftext+=String.fromCharCode((c>>6)|192);utftext+=String.fromCharCode((c&63)|128);}
else{utftext+=String.fromCharCode((c>>12)|224);utftext+=String.fromCharCode(((c>>6)&63)|128);utftext+=String.fromCharCode((c&63)|128);}}
return utftext;}
return{encode:function(input){var output="";var chr1,chr2,chr3,enc1,enc2,enc3,enc4;var i=0;input=utf8Encode(input);while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);enc1=chr1>>2;enc2=((chr1&3)<<4)|(chr2>>4);enc3=((chr2&15)<<2)|(chr3>>6);enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64;}else if(isNaN(chr3)){enc4=64;}
output=output+
keyStr.charAt(enc1)+keyStr.charAt(enc2)+
keyStr.charAt(enc3)+keyStr.charAt(enc4);}
return output;}};})();Ext.ux.Exporter=function(){return{exportGrid:function(grid,formatter,config){config=config||{};formatter=formatter||new Ext.ux.Exporter.CSVFormatter();Ext.applyIf(config,{title:grid.title});return formatter.format(grid.store,config);},exportStore:function(store,formatter,config){config=config||{};formatter=formatter||new Ext.ux.Exporter.ExcelFormatter();Ext.applyIf(config,{columns:config.store.fields.items});return Base64.encode(formatter.format(store,config));},exportTree:function(tree,formatter,config){config=config||{};formatter=formatter||new Ext.ux.Exporter.ExcelFormatter();var store=tree.store||config.store;Ext.applyIf(config,{title:tree.title});return Base64.encode(formatter.format(store,config));}};}();Ext.ux.Exporter.Button=Ext.extend(Ext.Button,{constructor:function(config){config=config||{};Ext.applyIf(config,{formatter:'CSVFormatter',fileName:'heron_export.csv',mimeType:'text/csv',exportFunction:'exportGrid',disabled:true,text:'Export',cls:'download'});if(config.store==undefined&&config.component!=undefined){Ext.applyIf(config,{store:config.component.store});}else{Ext.applyIf(config,{component:{store:config.store}});}
Ext.ux.Exporter.Button.superclass.constructor.call(this,config);if(this.store&&Ext.isFunction(this.store.on)){var self=this;self.store=this.store;var setLink=function(){var link=this.getEl().child('a',true);var buttonFun=function(){var formatter=new Ext.ux.Exporter[config.formatter]();var data=formatter.format(self.store,config);data=Base64.encode(data);Heron.data.DataExporter.download(data,config.fileName,config.mimeType)};link.href='#';link.onclick=buttonFun;this.enable();}
if(this.el){setLink.call(this);}else{this.on('render',setLink,this);}
this.store.on('load',setLink,this);}},template:new Ext.Template('<table border="0" cellpadding="0" cellspacing="0" class="x-btn-wrap"><tbody><tr>','<td class="x-btn-left"><i> </i></td><td class="x-btn-center"><a class="x-btn-text" href="{1}" target="{2}">{0}</a></td><td class="x-btn-right"><i> </i></td>',"</tr></tbody></table>"),onRender:function(ct,position){var btn,targs=[this.text||' ',this.href,this.target||"_self"];if(position){btn=this.template.insertBefore(position,targs,true);}else{btn=this.template.append(ct,targs,true);}
var btnEl=btn.child("a:first");this.btnEl=btnEl;btnEl.on('focus',this.onFocus,this);btnEl.on('blur',this.onBlur,this);this.initButtonEl(btn,btnEl);Ext.ButtonToggleMgr.register(this);},onClick:function(e){if(e.button!=0)return;if(!this.disabled){this.fireEvent("click",this,e);if(this.handler)this.handler.call(this.scope||this,this,e);}}});Ext.reg('exportbutton',Ext.ux.Exporter.Button);Ext.ux.Exporter.Formatter=function(config){config=config||{};Ext.applyIf(config,{});};Ext.ux.Exporter.Formatter.prototype={format:Ext.emptyFn};Ext.ux.Exporter.ExcelFormatter=Ext.extend(Ext.ux.Exporter.Formatter,{format:function(store,config){var workbook=new Ext.ux.Exporter.ExcelFormatter.Workbook(config);workbook.addWorksheet(store,config||{});return workbook.render();}});Ext.ux.Exporter.CSVFormatter=Ext.extend(Ext.ux.Exporter.Formatter,{extend:"Ext.ux.exporter.Formatter",contentType:'data:text/csv;base64,',separator:";",extension:"csv",format:function(store,config){this.columns=config.columns||(store.fields?store.fields.items:store.model.prototype.fields.items);return this.getHeaders()+"\n"+this.getRows(store);},getHeaders:function(store){var columns=[],title;Ext.each(this.columns,function(col){var title;if(col.text!=undefined){title=col.text;}else if(col.name){title=col.name.replace(/_/g," ");}
columns.push(title);},this);return columns.join(this.separator);},getRows:function(store){var rows=[];store.each(function(record,index){rows.push(this.geCell(record,index));},this);return rows.join("\n");},geCell:function(record,index){var cells=[];Ext.each(this.columns,function(col){var name=col.name||col.dataIndex;if(name){if(Ext.isFunction(col.renderer)){var value=col.renderer(record.get(name),null,record);}else{var value=record.get(name);}
cells.push(value);}});return cells.join(this.separator);}});Ext.ux.Exporter.ExcelFormatter.Workbook=Ext.extend(Object,{constructor:function(config){config=config||{};Ext.apply(this,config,{title:"Workbook",worksheets:[],compiledWorksheets:[],cellBorderColor:"#e4e4e4",styles:[],compiledStyles:[],hasDefaultStyle:true,hasStripeStyles:true,windowHeight:9000,windowWidth:50000,protectStructure:false,protectWindows:false});if(this.hasDefaultStyle)this.addDefaultStyle();if(this.hasStripeStyles)this.addStripedStyles();this.addTitleStyle();this.addHeaderStyle();},render:function(){this.compileStyles();this.joinedCompiledStyles=this.compiledStyles.join("");this.compileWorksheets();this.joinedWorksheets=this.compiledWorksheets.join("");return this.tpl.apply(this);},addWorksheet:function(store,config){var worksheet=new Ext.ux.Exporter.ExcelFormatter.Worksheet(store,config);this.worksheets.push(worksheet);return worksheet;},addStyle:function(config){var style=new Ext.ux.Exporter.ExcelFormatter.Style(config||{});this.styles.push(style);return style;},compileStyles:function(){this.compiledStyles=[];Ext.each(this.styles,function(style){this.compiledStyles.push(style.render());},this);return this.compiledStyles;},compileWorksheets:function(){this.compiledWorksheets=[];Ext.each(this.worksheets,function(worksheet){this.compiledWorksheets.push(worksheet.render());},this);return this.compiledWorksheets;},tpl:new Ext.XTemplate('<?xml version="1.0" encoding="utf-8"?>','<ss:Workbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns:o="urn:schemas-microsoft-com:office:office">','<o:DocumentProperties>','<o:Title>{title}</o:Title>','</o:DocumentProperties>','<ss:ExcelWorkbook>','<ss:WindowHeight>{windowHeight}</ss:WindowHeight>','<ss:WindowWidth>{windowWidth}</ss:WindowWidth>','<ss:ProtectStructure>{protectStructure}</ss:ProtectStructure>','<ss:ProtectWindows>{protectWindows}</ss:ProtectWindows>','</ss:ExcelWorkbook>','<ss:Styles>','{joinedCompiledStyles}','</ss:Styles>','{joinedWorksheets}','</ss:Workbook>'),addDefaultStyle:function(){var borderProperties=[{name:"Color",value:this.cellBorderColor},{name:"Weight",value:"1"},{name:"LineStyle",value:"Continuous"}];this.addStyle({id:'Default',attributes:[{name:"Alignment",properties:[{name:"Vertical",value:"Top"},{name:"WrapText",value:"1"}]},{name:"Font",properties:[{name:"FontName",value:"arial"},{name:"Size",value:"10"}]},{name:"Interior"},{name:"NumberFormat"},{name:"Protection"},{name:"Borders",children:[{name:"Border",properties:[{name:"Position",value:"Top"}].concat(borderProperties)},{name:"Border",properties:[{name:"Position",value:"Bottom"}].concat(borderProperties)},{name:"Border",properties:[{name:"Position",value:"Left"}].concat(borderProperties)},{name:"Border",properties:[{name:"Position",value:"Right"}].concat(borderProperties)}]}]});},addTitleStyle:function(){this.addStyle({id:"title",attributes:[{name:"Borders"},{name:"Font"},{name:"NumberFormat",properties:[{name:"Format",value:"@"}]},{name:"Alignment",properties:[{name:"WrapText",value:"1"},{name:"Horizontal",value:"Center"},{name:"Vertical",value:"Center"}]}]});},addHeaderStyle:function(){this.addStyle({id:"headercell",attributes:[{name:"Font",properties:[{name:"Bold",value:"1"},{name:"Size",value:"10"}]},{name:"Interior",properties:[{name:"Pattern",value:"Solid"},{name:"Color",value:"#A3C9F1"}]},{name:"Alignment",properties:[{name:"WrapText",value:"1"},{name:"Horizontal",value:"Center"}]}]});},addStripedStyles:function(){this.addStyle({id:"even",attributes:[{name:"Interior",properties:[{name:"Pattern",value:"Solid"},{name:"Color",value:"#CCFFFF"}]}]});this.addStyle({id:"odd",attributes:[{name:"Interior",properties:[{name:"Pattern",value:"Solid"},{name:"Color",value:"#CCCCFF"}]}]});Ext.each(['even','odd'],function(parentStyle){this.addChildNumberFormatStyle(parentStyle,parentStyle+'date',"[ENG][$-409]dd\-mmm\-yyyy;@");this.addChildNumberFormatStyle(parentStyle,parentStyle+'int',"0");this.addChildNumberFormatStyle(parentStyle,parentStyle+'float',"0.00");},this);},addChildNumberFormatStyle:function(parentStyle,id,value){this.addStyle({id:id,parentStyle:"even",attributes:[{name:"NumberFormat",properties:[{name:"Format",value:value}]}]});}});Ext.ux.Exporter.ExcelFormatter.Worksheet=Ext.extend(Object,{constructor:function(store,config){config=config||{};this.store=store;Ext.applyIf(config,{hasTitle:true,hasHeadings:true,stripeRows:true,title:"Workbook",columns:store.fields==undefined?{}:store.fields.items});Ext.apply(this,config);Ext.ux.Exporter.ExcelFormatter.Worksheet.superclass.constructor.apply(this,arguments);},dateFormatString:"Y-m-d",worksheetTpl:new Ext.XTemplate('<ss:Worksheet ss:Name="{title}">','<ss:Names>','<ss:NamedRange ss:Name="Print_Titles" ss:RefersTo="=\'{title}\'!R1:R2" />','</ss:Names>','<ss:Table x:FullRows="1" x:FullColumns="1" ss:ExpandedColumnCount="{colCount}" ss:ExpandedRowCount="{rowCount}">','{columns}','<ss:Row ss:Height="38">','<ss:Cell ss:StyleID="title" ss:MergeAcross="{colCount - 1}">','<ss:Data xmlns:html="http://www.w3.org/TR/REC-html40" ss:Type="String">','<html:B><html:U><html:Font html:Size="15">{title}','</html:Font></html:U></html:B></ss:Data><ss:NamedCell ss:Name="Print_Titles" />','</ss:Cell>','</ss:Row>','<ss:Row ss:AutoFitHeight="1">','{header}','</ss:Row>','{rows}','</ss:Table>','<x:WorksheetOptions>','<x:PageSetup>','<x:Layout x:CenterHorizontal="1" x:Orientation="Landscape" />','<x:Footer x:Data="Page &amp;P of &amp;N" x:Margin="0.5" />','<x:PageMargins x:Top="0.5" x:Right="0.5" x:Left="0.5" x:Bottom="0.8" />','</x:PageSetup>','<x:FitToPage />','<x:Print>','<x:PrintErrors>Blank</x:PrintErrors>','<x:FitWidth>1</x:FitWidth>','<x:FitHeight>32767</x:FitHeight>','<x:ValidPrinterInfo />','<x:VerticalResolution>600</x:VerticalResolution>','</x:Print>','<x:Selected />','<x:DoNotDisplayGridlines />','<x:ProtectObjects>False</x:ProtectObjects>','<x:ProtectScenarios>False</x:ProtectScenarios>','</x:WorksheetOptions>','</ss:Worksheet>'),render:function(store){return this.worksheetTpl.apply({header:this.buildHeader(),columns:this.buildColumns().join(""),rows:this.buildRows().join(""),colCount:this.columns.length,rowCount:this.store.getCount()+2,title:this.title});},buildColumns:function(){var cols=[];Ext.each(this.columns,function(column){cols.push(this.buildColumn());},this);return cols;},buildColumn:function(width){return String.format('<ss:Column ss:AutoFitWidth="1" ss:Width="{0}" />',width||164);},buildRows:function(){var rows=[];this.store.each(function(record,index){rows.push(this.buildRow(record,index));},this);return rows;},buildHeader:function(){var cells=[];Ext.each(this.columns,function(col){var title;if(col.header!=undefined){title=col.header;}else{title=col.name.replace(/_/g," ");}
cells.push(String.format('<ss:Cell ss:StyleID="headercell"><ss:Data ss:Type="String">{0}</ss:Data><ss:NamedCell ss:Name="Print_Titles" /></ss:Cell>',title));},this);return cells.join("");},buildRow:function(record,index){var style,cells=[];if(this.stripeRows===true)style=index%2==0?'even':'odd';Ext.each(this.columns,function(col){var name=col.name||col.dataIndex;if(Ext.isFunction(col.renderer)){var value=col.renderer(record.get(name),null,record),type="String";}else{var value=record.get(name),type=this.typeMappings[col.type||record.fields.item(name).type];}
cells.push(this.buildCell(value,type,style).render());},this);return String.format("<ss:Row>{0}</ss:Row>",cells.join(""));},buildCell:function(value,type,style){if(type=="DateTime"&&Ext.isFunction(value.format))value=value.format(this.dateFormatString);return new Ext.ux.Exporter.ExcelFormatter.Cell({value:value,type:type,style:style});},typeMappings:{'int':"Number",'string':"String",'float':"Number",'date':"DateTime"}});Ext.ux.Exporter.ExcelFormatter.Cell=Ext.extend(Object,{constructor:function(config){Ext.applyIf(config,{type:"String"});Ext.apply(this,config);Ext.ux.Exporter.ExcelFormatter.Cell.superclass.constructor.apply(this,arguments);},render:function(){return this.tpl.apply(this);},tpl:new Ext.XTemplate('<ss:Cell ss:StyleID="{style}">','<ss:Data ss:Type="{type}"><![CDATA[{value}]]></ss:Data>','</ss:Cell>')});Ext.ux.Exporter.ExcelFormatter.Style=Ext.extend(Object,{constructor:function(config){config=config||{};Ext.apply(this,config,{parentStyle:'',attributes:[]});Ext.ux.Exporter.ExcelFormatter.Style.superclass.constructor.apply(this,arguments);if(this.id==undefined)throw new Error("An ID must be provided to Style");this.preparePropertyStrings();},preparePropertyStrings:function(){Ext.each(this.attributes,function(attr,index){this.attributes[index].propertiesString=this.buildPropertyString(attr);this.attributes[index].children=attr.children||[];Ext.each(attr.children,function(child,childIndex){this.attributes[index].children[childIndex].propertiesString=this.buildPropertyString(child);},this);},this);},buildPropertyString:function(attribute){var propertiesString="";Ext.each(attribute.properties||[],function(property){propertiesString+=String.format('ss:{0}="{1}" ',property.name,property.value);},this);return propertiesString;},render:function(){return this.tpl.apply(this);},tpl:new Ext.XTemplate('<tpl if="parentStyle.length == 0">','<ss:Style ss:ID="{id}">','</tpl>','<tpl if="parentStyle.length != 0">','<ss:Style ss:ID="{id}" ss:Parent="{parentStyle}">','</tpl>','<tpl for="attributes">','<tpl if="children.length == 0">','<ss:{name} {propertiesString} />','</tpl>','<tpl if="children.length > 0">','<ss:{name} {propertiesString}>','<tpl for="children">','<ss:{name} {propertiesString} />','</tpl>','</ss:{name}>','</tpl>','</tpl>','</ss:Style>')});Ext.namespace("Heron.widgets");Heron.widgets.GridCellRenderer=(function(){function substituteAttrValues(template,options,record){if(!options.attrNames){options.attrNames=new Array();var inAttrName=false;var attrName='';for(var i=0;i<template.length;i++){var s=template.charAt(i);if(s=='{'){inAttrName=true;attrName='';}else if(s=='}'){options.attrNames.push(attrName)
inAttrName=false;}else if(inAttrName){attrName+=s;}}}
var result=template;for(var j=0;j<options.attrNames.length;j++){var name=options.attrNames[j];var value=record.data[name];if(!value){value='';}
var valueTemplate='{'+name+'}';result=result.replace(valueTemplate,value);}
return result;}
var instance={directLink:function(value,metaData,record,rowIndex,colIndex,store){if(!this.options){return value;}
var options=this.options;var url=options.url;if(!url){return value;}
url=substituteAttrValues(url,options,record);var result='<a href="'+url+'" target="{target}">'+value+'</a>';var target=options.target?options.target:'_new';var targetTemplate='{target}';return result.replace(targetTemplate,target);},browserPopupLink:function(value,metaData,record,rowIndex,colIndex,store){if(!this.options){return value;}
var options=this.options;var templateURL=options.url;if(!templateURL){return value;}
var BrowserParam='\''+(options.winName?options.winName:'herongridcellpopup')+'\''
+', '+(options.bReopen?options.bReopen:false)
+', \''+(substituteAttrValues(templateURL,options,record))+'\''
+', '+(options.hasMenubar?options.hasMenubar:false)
+', '+(options.hasToolbar?options.hasToolbar:false)
+', '+(options.hasAddressbar?options.hasAddressbar:false)
+', '+(options.hasStatusbar?options.hasStatusbar:false)
+', '+(options.hasScrollbars?options.hasScrollbars:false)
+', '+(options.isResizable?options.isResizable:false)
+', '+(options.hasPos?options.hasPos:false)
+', '+(options.xPos?options.xPos:0)
+', '+(options.yPos?options.yPos:0)
+', '+(options.hasSize?options.hasSize:false)
+', '+(options.wSize?options.wSize:200)
+', '+(options.hSize?options.hSize:100);return(options.attrPreTxt?options.attrPreTxt:"")+'<a href="#" onclick="'+'Heron.Utils.openBrowserWindow('+BrowserParam+'); return false">'+value+'</a>';},valueSubstitutor:function(value,metaData,record,rowIndex,colIndex,store){if(!this.options){return value;}
var options=this.options;var template=options.template;if(!template){return value;}
return substituteAttrValues(template,options,record);}};return(instance);})();Ext.namespace("Heron.widgets");var ActiveLayerNodeUI=Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin());Heron.widgets.ActiveLayerNode=Ext.extend(GeoExt.tree.LayerNode,{render:function(bulkRender){var layer=this.layer instanceof OpenLayers.Layer&&this.layer;if(layer&&this.attributes&&this.attributes.component&&this.attributes.component.xtype=="gx_opacityslider"){this.attributes.component.layer=layer;if(layer.opacity>=1.0){layer.setOpacity(1.0);}
else if(layer.opacity<0.0){layer.setOpacity(0.0);}
this.attributes.component.value=parseInt(layer.opacity*100);}
Heron.widgets.ActiveLayerNode.superclass.renderX.call(this,bulkRender);if(layer&&this.attributes&&this.attributes.component&&this.attributes.component.xtype=="gx_opacityslider"){if(layer.opacity>=1.0){layer.setOpacity(0.999);layer.setOpacity(1.0);}
else if(layer.opacity>=0.001){layer.setOpacity(layer.opacity-0.001);layer.setOpacity(layer.opacity+0.001);}else{layer.setOpacity(0.001);layer.setOpacity(0.0);}
this.attributes.component.value=parseInt(layer.opacity*100);}}});Ext.tree.TreePanel.nodeTypes.hr_activelayer=Heron.widgets.ActiveLayerNode;Heron.widgets.ActiveLayersPanel=Ext.extend(Ext.tree.TreePanel,{title:__('Active Layers'),applyStandardNodeOpts:function(opts,layer){if(opts.component){opts.component.layer=layer;}
opts.layerId=layer.id;},initComponent:function(){var self=this;var options={border:true,title:this.title,autoScroll:true,enableDD:true,plugins:[{ptype:"gx_treenodecomponent"}],root:{nodeType:"gx_layercontainer",text:__('Layers'),loader:{applyLoader:false,baseAttrs:{uiProvider:ActiveLayerNodeUI,iconCls:'gx-activelayer-drag-icon'},createNode:function(attr){return self.createNode(self,{layer:attr.layer});},filter:function(record){return record.getLayer().getVisibility();}}},rootVisible:false,lines:false};Ext.apply(this,options);Heron.widgets.ActiveLayersPanel.superclass.initComponent.call(this);this.addListener("afterrender",this.onAfterRender);this.addListener("beforedblclick",this.onBeforeDblClick);this.addListener("beforenodedrop",this.onBeforeNodeDrop);},createNode:function(self,attr){if(self.hropts){Ext.apply(attr,self.hropts);}else{Ext.apply(attr,{});}
self.applyStandardNodeOpts(attr,attr.layer);attr.uiProvider=ActiveLayerNodeUI;attr.nodeType="hr_activelayer";attr.iconCls='gx-activelayer-drag-icon';return GeoExt.tree.LayerLoader.prototype.createNode.call(self,attr);},onBeforeDblClick:function(node,evt){return false;},onBeforeNodeDrop:function(dropEvt){if(dropEvt){switch(dropEvt.point){case"above":return true;break;case"below":var layer=dropEvt.target.layer;if(!layer.isBaseLayer){return true;}
break;}}
return false;},onAfterRender:function(){var self=this;var map=Heron.App.getMap();map.events.register('changelayer',null,function(evt){var layer=evt.layer;var rootNode=self.getRootNode();var layerNode=rootNode.findChild('layerId',evt.layer.id);if(evt.property==="visibility"){if(evt.layer.getVisibility()&&!layerNode){var newNode=self.createNode(self,{layer:layer});var newLayerId=layer.map.getLayerIndex(layer);if(layer.isBaseLayer){var bottomLayer;var bottomLayerId;if(rootNode.lastChild){bottomLayer=rootNode.lastChild.layer;if(bottomLayer){bottomLayerId=bottomLayer.map.getLayerIndex(bottomLayer);}}
rootNode.appendChild(newNode);if(bottomLayer){if(newLayerId>bottomLayerId){layer.map.raiseLayer(layer,bottomLayerId-newLayerId);}}}else{var topLayer;var topLayerId;if(rootNode.firstChild){topLayer=rootNode.firstChild.layer;if(topLayer){topLayerId=topLayer.map.getLayerIndex(topLayer);}}
rootNode.insertBefore(newNode,rootNode.firstChild);if(topLayer){if(topLayerId>newLayerId){layer.map.raiseLayer(layer,topLayerId-newLayerId);}}}
rootNode.reload();}else if(!evt.layer.getVisibility()&&layerNode){layerNode.un("move",self.onChildMove,self);layerNode.remove();}}});},onListenerDoLayout:function(node){if(node&&node.hropts&&node.hropts.component&&node.hropts.component.xtype=="gx_opacityslider"){var rootNode=node.getRootNode();rootNode.cascade(function(n){if(n.layer){n.component.setValue(parseInt(n.layer.opacity*100));n.component.syncThumb();}});rootNode.reload();node.doLayout();}},listeners:{activate:function(node){this.onListenerDoLayout(this);},expand:function(node){this.onListenerDoLayout(this);}}});Ext.reg('hr_activelayerspanel',Heron.widgets.ActiveLayersPanel);Ext.namespace("Heron.widgets");var ActiveThemeNodeUI=Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin());Heron.widgets.ActiveThemeNode=Ext.extend(GeoExt.tree.LayerNode,{render:function(bulkRender){var layer=this.layer instanceof OpenLayers.Layer&&this.layer;Heron.widgets.ActiveThemeNode.superclass.renderX.call(this,bulkRender);}});Ext.tree.TreePanel.nodeTypes.hr_activetheme=Heron.widgets.ActiveThemeNode;Heron.widgets.ActiveThemesPanel=Ext.extend(Ext.tree.TreePanel,{title:__('Active Themes'),qtip_up:__('Move up'),qtip_down:__('Move down'),qtip_opacity:__('Opacity'),qtip_remove:__('Remove layer from list'),qtip_tools:__('Tools'),applyStandardNodeOpts:function(opts,layer){if(opts.component){opts.component.layer=layer;}
opts.layerId=layer.id;},initComponent:function(){var self=this;var options={border:true,title:this.title,autoScroll:true,enableDD:true,plugins:[{ptype:"gx_treenodeactions",listeners:{action:this.onAction}}],root:{nodeType:"gx_layercontainer",loader:{applyLoader:false,baseAttrs:{radioGroup:"radiogroup",uiProvider:ActiveThemeNodeUI},createNode:function(attr){return self.createNode(self,{layer:attr.layer});},filter:function(record){return record.getLayer().getVisibility();}}},rootVisible:false,lines:false};Ext.apply(this,options);Heron.widgets.ActiveThemesPanel.superclass.initComponent.call(this);this.addListener("afterrender",this.onAfterRender);this.addListener("beforedblclick",this.onBeforeDblClick);this.addListener("beforenodedrop",this.onBeforeNodeDrop);},createNode:function(self,attr){if(self.hropts){Ext.apply(attr,self.hropts);}else{Ext.apply(attr,{showOpacity:false,showTools:false,showRemove:false});}
self.applyStandardNodeOpts(attr,attr.layer);attr.uiProvider=ActiveThemeNodeUI;attr.nodeType="hr_activetheme";attr.iconCls='gx-activethemes-drag-icon';attr.actions=[{action:"up",qtip:this.qtip_up,update:function(el){var layer=this.layer,map=layer.map;if(map.getLayerIndex(layer)==map.layers.length-1){el.addClass('disabled');}else{el.removeClass('disabled');}}},{action:"down",qtip:this.qtip_down,update:function(el){var layer=this.layer,map=layer.map;if(map.getLayerIndex(layer)==1){el.addClass('disabled');}else{el.removeClass('disabled');}}},{action:"opacity",qtip:this.qtip_opacity,update:function(el){var layer=this.layer,map=layer.map;}},{action:"tools",qtip:this.qtip_tools,update:function(el){var layer=this.layer,map=layer.map;}},{action:"remove",qtip:this.qtip_remove}];attr.actionsNum=attr.actions.length-1;if(!self.hropts.showRemove){attr.actions.remove(attr.actions[attr.actionsNum]);}
attr.actionsNum=attr.actionsNum-1;if(!self.hropts.showTools){attr.actions.remove(attr.actions[attr.actionsNum]);}
attr.actionsNum=attr.actionsNum-1;if(!self.hropts.showOpacity){attr.actions.remove(attr.actions[attr.actionsNum]);}
attr.actionsNum=attr.actionsNum-1;return GeoExt.tree.LayerLoader.prototype.createNode.call(self,attr);},onBeforeDblClick:function(node,evt){return false;},onBeforeNodeDrop:function(dropEvt){if(dropEvt){switch(dropEvt.point){case"above":return true;break;case"below":var layer=dropEvt.target.layer;if(!layer.isBaseLayer){return true;}
break;}}
return false;},onAction:function(node,action,evt){var layer=node.layer;var actLayerId=layer.map.getLayerIndex(layer);switch(action){case"up":if(!layer.isBaseLayer){var prevNode=node.previousSibling;if(prevNode){var prevLayer=prevNode.layer;var prevLayerId=prevLayer.map.getLayerIndex(prevLayer);if(prevLayerId>actLayerId){layer.map.raiseLayer(layer,prevLayerId-actLayerId);}}}
break;case"down":if(!layer.isBaseLayer){var nextNode=node.nextSibling;if(nextNode){var nextLayer=nextNode.layer;var nextLayerId=nextLayer.map.getLayerIndex(nextLayer);if(nextLayerId<actLayerId){if(!nextLayer.isBaseLayer){layer.map.raiseLayer(layer,nextLayerId-actLayerId);}}}}
break;case"remove":if(!layer.isBaseLayer){Ext.MessageBox.getDialog().defaultButton=2;Ext.MessageBox.show({title:String.format(__('Removing')+' "{0}"',layer.name),msg:String.format(__('Are you sure you want to remove the layer from your list of layers?'),'<i><b>'+layer.name+'</b></i>'),buttons:Ext.Msg.YESNO,fn:function(btn){if(btn=='yes'){layer.setVisibility(false);layer.destroy();}},scope:this,icon:Ext.MessageBox.QUESTION,maxWidth:300});}else{Ext.MessageBox.show({title:String.format(__('Removing')+' "{0}"',layer.name),msg:String.format(__('You are not allowed to remove the baselayer from your list of layers!'),'<i><b>'+layer.name+'</b></i>'),buttons:Ext.Msg.OK,fn:function(btn){if(btn=='ok'){}},icon:Ext.MessageBox.ERROR,maxWidth:300});}
break;case"opacity":var cmp=Ext.getCmp('WinOpacity-'+layer.id);var xy=evt.getXY();xy[0]=xy[0]+40;xy[1]=xy[1]+0;if(!cmp){cmp=new Ext.Window({title:__('Opacity'),id:'WinOpacity-'+layer.id,x:xy[0],y:xy[1],width:200,resizable:false,constrain:true,bodyStyle:'padding:2px 4px',closeAction:'hide',listeners:{hide:function(){cmp.x=xy[0];cmp.y=xy[1];},show:function(){cmp.show();cmp.focus();}},items:[{xtype:'label',text:layer.name,height:20},{xtype:"gx_opacityslider",showTitle:false,plugins:new GeoExt.LayerOpacitySliderTip(),vertical:false,inverse:false,aggressive:false,layer:layer}]});cmp.show();}else{cmp.hide();cmp.setPosition(xy[0],xy[1]);cmp.show();cmp.focus();}
break;case"tools":var id=layer.map.getLayerIndex(layer);var num_id=layer.map.getNumLayers();Ext.MessageBox.show({title:String.format('Tools "{0}"',layer.name),msg:String.format('Here should be a form for "{0}" containing'+' infos, etc.!<br>'+"<br>Layer: "+node+"<br>"+layer.name+"<br>"+layer.id+"<br>OL-LayerId: "+id+" ("+num_id+")",'<i><b>'+layer.name+'</b></i>'),buttons:Ext.Msg.OK,fn:function(btn){if(btn=='ok'){}},icon:Ext.MessageBox.INFO,maxWidth:300});break;}},onAfterRender:function(){var self=this;var map=Heron.App.getMap();map.events.register('changelayer',null,function(evt){var layer=evt.layer;var rootNode=self.getRootNode();var layerNode=rootNode.findChild('layerId',evt.layer.id);if(evt.property==="visibility"){if(evt.layer.getVisibility()&&!layerNode){var newNode=self.createNode(self,{layer:layer});var newLayerId=layer.map.getLayerIndex(layer);if(layer.isBaseLayer){var bottomLayer;var bottomLayerId;if(rootNode.lastChild){bottomLayer=rootNode.lastChild.layer;if(bottomLayer){bottomLayerId=bottomLayer.map.getLayerIndex(bottomLayer);}}
rootNode.appendChild(newNode);if(bottomLayer){if(newLayerId>bottomLayerId){layer.map.raiseLayer(layer,bottomLayerId-newLayerId);}}}else{var topLayer;var topLayerId;if(rootNode.firstChild){topLayer=rootNode.firstChild.layer;if(topLayer){topLayerId=topLayer.map.getLayerIndex(topLayer);}}
rootNode.insertBefore(newNode,rootNode.firstChild);if(topLayer){if(topLayerId>newLayerId){layer.map.raiseLayer(layer,topLayerId-newLayerId);}}}
rootNode.reload();}else if(!evt.layer.getVisibility()&&layerNode){layerNode.un("move",self.onChildMove,self);layerNode.remove();}}});}});Ext.reg('hr_activethemespanel',Heron.widgets.ActiveThemesPanel);Ext.namespace("Heron.widgets");Heron.widgets.CapabilitiesTreePanel=Ext.extend(Ext.tree.TreePanel,{initComponent:function(){var layerOptions=Ext.apply({buffer:0,singleTile:true,ratio:1},this.hropts.layerOptions);var layerParams=Ext.apply({'TRANSPARENT':'TRUE'},this.hropts.layerParams);var root=new Ext.tree.AsyncTreeNode({text:this.hropts.text,expanded:this.hropts.preload,loader:new GeoExt.tree.WMSCapabilitiesLoader({url:this.hropts.url,layerOptions:layerOptions,layerParams:layerParams,createNode:function(attr){attr.checked=attr.leaf?false:undefined;return GeoExt.tree.WMSCapabilitiesLoader.prototype.createNode.apply(this,[attr]);}})});this.options={root:root,listeners:{'checkchange':function(node,checked){var map=Heron.App.getMap();if(!map){return;}
var layer=node.attributes.layer;if(checked===true){map.addLayer(layer);}else{map.removeLayer(layer);}}}};Ext.apply(this,this.options);Heron.widgets.CapabilitiesTreePanel.superclass.initComponent.call(this);}});Ext.reg('hr_capabilitiestreepanel',Heron.widgets.CapabilitiesTreePanel);Ext.namespace("Heron.widgets");Heron.widgets.CoordSearchPanel=Ext.extend(Ext.form.FormPanel,{title:__('Go to coordinates'),layout:'form',bodyStyle:'padding:5px',fieldLabelX:__('X'),fieldLabelY:__('Y'),onSearchCompleteZoom:10,iconWidth:32,iconHeight:32,localIconFile:'redpin.png',iconUrl:null,projection:null,initComponent:function(){var self=this;this.xLabel=new Ext.form.TextField({fieldLabel:this.fieldLabelX});this.yLabel=new Ext.form.TextField({fieldLabel:this.fieldLabelY});this.items=[{layout:'form',colspan:2,border:false,items:[self.xLabel]},{layout:'form',colspan:2,border:false,items:[self.yLabel]},{layout:'column',border:false,items:[new Ext.Button({text:__('Go!'),align:'right',tooltip:__('Pan and zoom to location'),handler:function(){self.panAndZoom(self);}})]}];this.keys=[{key:[Ext.EventObject.ENTER],handler:function(){self.panAndZoom(self);}}];if(!this.iconURL){this.iconUrl=Heron.Utils.getImageLocation(this.localIconFile);}
if(this.projection){this.olProjection=new OpenLayers.Projection(this.projection);}
Heron.widgets.CoordSearchPanel.superclass.initComponent.call(this);},panAndZoom:function(self){if(this.layer){this.layer.clearMarkers();}
var x=self.xLabel.getValue();var y=self.yLabel.getValue();var zoom=self.onSearchCompleteZoom;var map=Heron.App.getMap();var position=new OpenLayers.LonLat(x,y);if(this.olProjection){position.transform(this.olProjection,map.getProjectionObject());}
map.setCenter(position,zoom);if(!this.layer){this.layer=new OpenLayers.Layer.Markers(__('Locations'));map.addLayer(this.layer);var size=new OpenLayers.Size(this.iconWidth,this.iconHeight);var offset=new OpenLayers.Pixel(-(size.w/2),-size.h);this.icon=new OpenLayers.Icon(this.iconUrl,size,offset);}
var marker=new OpenLayers.Marker(position,this.icon);this.layer.addMarker(marker);}});Ext.reg("hr_coordsearchpanel",Heron.widgets.CoordSearchPanel);Ext.namespace("Heron.widgets");Heron.widgets.FeaturePanel=Ext.extend(Ext.Panel,{maxFeatures:5,tabs:null,map:null,initComponent:function(){Ext.apply(this,{layout:"fit",title:__('Feature Info')});Heron.widgets.FeaturePanel.superclass.initComponent.call(this);this.addListener("afterrender",this.setupGrid);},setupGrid:function(evt){this.add(this.getGrid());},getGrid:function(){var map=Heron.App.getMap();var vecLayer=new OpenLayers.Layer.Vector("vector");map.addLayers([vecLayer]);var store=new GeoExt.data.FeatureStore({layer:vecLayer,fields:[{name:'objectnumm',type:'string'}],proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:'http://local.kademo.nl/gs2/wfs?request=GetFeature&typeName=kad:lki_vlakken&maxFeatures=10&version=1.0.0',format:new OpenLayers.Format.WFS({},vecLayer)})}),autoLoad:true});var gridPanel=new Ext.grid.GridPanel({title:"Feature Grid",store:store,columns:[{header:"Object",width:200,dataIndex:"objectnumm"}],sm:new GeoExt.grid.FeatureSelectionModel()});return gridPanel;}});Ext.reg('hr_featurepanel',Heron.widgets.FeaturePanel);Ext.namespace("Heron.widgets");Ext.namespace("Heron.utils");Heron.widgets.FeatureInfoPanel=Ext.extend(Ext.Panel,{maxFeatures:5,displayPanels:['Grid'],exportFormats:null,infoFormat:'application/vnd.ogc.gml',tabPanel:null,map:null,displayPanel:null,lastEvt:null,olControl:null,tb:null,initComponent:function(){var self=this;Ext.apply(this,{layout:"fit",title:__('Feature Info')});this.display=this.displayGrid;var displayOpts={Grid:{Fun:this.displayGrid,Item:{text:__('Grid'),group:"featInfoGroup",checked:true,checkHandler:function(t){self.display=self.displayGrid;self.handleGetFeatureInfo();}}},Tree:{Fun:this.displayTree,Item:{text:__('Tree'),group:"featInfoGroup",checked:false,checkHandler:function(t){self.display=self.displayTree;self.handleGetFeatureInfo();}}},XML:{Fun:this.displayXML,Item:{text:__('XML'),group:"featInfoGroup",checked:false,checkHandler:function(t){self.display=self.displayXML;self.handleGetFeatureInfo();}}}};var displayType;if(this.displayPanels.length==1){displayType=this.displayPanels[0];if(displayOpts[displayType]){this.display=displayOpts[displayType].Fun;}}else{var displayMenuItems=[];for(var i=0;i<this.displayPanels.length;i++){displayType=this.displayPanels[i];if(displayOpts[displayType]){displayMenuItems.push(displayOpts[displayType].Item);}}
var displayMenu=new Ext.menu.Menu({id:'displayMenu',style:{overflow:'visible'},items:displayMenuItems});this.tb=new Ext.Toolbar();this.tb.add({text:__('Display'),cls:'x-btn-text-icon',iconCls:'icon-table',tooltip:__('Choose a Display Option'),menu:displayMenu});}
if(this.exportFormats&&this.exportFormats.length>0){var exportMenuItems=[];for(var j=0;j<this.exportFormats.length;j++){var exportFormat=this.exportFormats[j];var item={text:__('Export')+' '+exportFormat,cls:'x-btn',iconCls:'icon-table-export',exportFormat:exportFormat,gfiPanel:self,handler:self.exportData};exportMenuItems.push(item);}
var exportMenu=new Ext.menu.Menu({id:'exportMenu',style:{overflow:'visible'},items:exportMenuItems});if(!this.tb){this.tb=new Ext.Toolbar();}
this.tb.add('->');this.tb.add({text:__('Export'),cls:'x-btn-text-icon',iconCls:'icon-table-save',tooltip:__('Choose an Export Format'),menu:exportMenu});}
if(this.tb){Ext.apply(this,{tbar:this.tb});}
Heron.widgets.FeatureInfoPanel.superclass.initComponent.call(this);this.map=Heron.App.getMap();var controls=this.map.getControlsByClass("OpenLayers.Control.WMSGetFeatureInfo");if(controls&&controls.length>0){this.olControl=controls[0];this.olControl.infoFormat=this.infoFormat;this.olControl.maxFeatures=this.maxFeatures;}
if(!this.olControl){this.olControl=new OpenLayers.Control.WMSGetFeatureInfo({maxFeatures:this.maxFeatures,queryVisible:true,infoFormat:this.infoFormat});this.map.addControl(this.olControl);}
this.olControl.events.register("getfeatureinfo",this,this.handleGetFeatureInfo);this.olControl.events.register("beforegetfeatureinfo",this,this.handleBeforeGetFeatureInfo);this.on("render",function(){this.mask=new Ext.LoadMask(this.body,{msg:__('Loading...')})});},handleBeforeGetFeatureInfo:function(evt){this.olControl.layers=[];this.olControl.url=null;this.olControl.drillDown=true;var layer;for(var index=0;index<this.map.layers.length;index++){layer=this.map.layers[index];if(!layer.params){continue;}
if(layer.visibility&&(layer.featureInfoFormat||layer.params.INFO_FORMAT)){if(!layer.params.INFO_FORMAT&&layer.featureInfoFormat){layer.params.INFO_FORMAT=layer.featureInfoFormat;}
this.olControl.layers.push(layer);}}
if(this.olControl.layers.length==0){alert(__('Feature Info unavailable'));return;}
this.lastEvt=null;this.expand();if(this.tabPanel!=undefined){this.tabPanel.removeAll();}
this.mask.show();},handleGetFeatureInfo:function(evt){this.mask.hide();if(evt){this.lastEvt=evt;}
if(!this.lastEvt){return;}
if(this.displayPanel){this.remove(this.displayPanel);}
this.displayPanel=this.display(this.lastEvt);if(this.displayPanel){this.add(this.displayPanel);this.displayPanel.doLayout();}
if(this.getLayout()){this.getLayout().runLayout();}},displayGrid:function(evt){var types=new Array();var featureType;for(var index=0;index<evt.features.length;index++){var rec=evt.features[index];featureType=null;if(rec.gml&&rec.gml.featureType){featureType=rec.gml.featureType;}
if(!featureType&&rec.fid&&rec.fid.indexOf('undefined')<0){featureType=/[^\.]*/.exec(rec.fid);featureType=(featureType[0]!="null")?featureType[0]:null;}
if(!featureType&&rec.attributes['_LAYERID_']){featureType=rec.attributes['_LAYERID_'];}
if(!featureType&&rec.attributes['DINO_DBA.MAP_SDE_GWS_WELL_W_HEADS_VW.DINO_NR']){featureType='TNO_DINO_WELLS';}
if(!featureType&&rec.attributes['DINO_DBA.MAP_SDE_BRH_BOREHOLE_RD_VW.DINO_NR']){featureType='TNO_DINO_BOREHOLES';}
if(!featureType){featureType=__('Unknown');}
var found=false;var type=null;for(var j=0;j<types.length;j++){type=types[j];if(type.featureType==featureType){found=true;}}
if(!found){type={featureType:featureType,columns:new Array(),fields:new Array(),records:new Array()};types.push(type);}
var attrName;for(attrName in rec.attributes){var attrValue=rec.attributes[attrName];if(attrValue&&attrValue.indexOf("http://")>=0){rec.attributes[attrName]='<a href="'+attrValue+'" target="_new">'+attrValue+'</a>';}
if(attrName.indexOf(".")>=0){var newAttrName=attrName.replace(/\./g,"_");rec.attributes[newAttrName]=rec.attributes[attrName];if(attrName!=newAttrName){delete rec.attributes[attrName];}}}
if(type.records.length==0){for(attrName in rec.attributes){if(type.records.length==0){var column={header:attrName,width:100,dataIndex:attrName};if(this.gridCellRenderers){var gridCellRenderer;for(var k=0;k<this.gridCellRenderers.length;k++){gridCellRenderer=this.gridCellRenderers[k];if(gridCellRenderer.attrName&&attrName==gridCellRenderer.attrName){if(gridCellRenderer.featureType&&featureType==gridCellRenderer.featureType||!gridCellRenderer.featureType){column.options=gridCellRenderer.renderer.options;column.renderer=gridCellRenderer.renderer.fn;}}}}
type.columns.push(column);type.fields.push(attrName);}}}
type.records.push(rec.attributes);}
if(this.tabPanel!=null){this.remove(this.tabPanel);this.tabPanel=null;}
while(types.length>0){type=types.pop();if(type.records.length>0){var store=new Ext.data.JsonStore({autoDestroy:true,fields:type.fields,data:type.records});var grid=new Ext.grid.GridPanel({store:store,title:type.featureType,featureType:type.featureType,colModel:new Ext.grid.ColumnModel({defaults:{width:120,sortable:true},columns:type.columns,autoScroll:true,listeners:{"render":function(c){c.doLayout();}}})});if(this.tabPanel==null){this.tabPanel=new Ext.TabPanel({border:false,autoDestroy:true,enableTabScroll:true,height:this.getHeight(),items:[grid],activeTab:0});}else{this.tabPanel.add(grid);this.tabPanel.setActiveTab(0);}}}
return this.tabPanel;},displayTree:function(evt){var panel=new Heron.widgets.XMLTreePanel();panel.xmlTreeFromText(panel,evt.text);return panel;},displayXML:function(evt){var opts={html:'<div class="hr-html-panel-body"><pre>'+Heron.Utils.formatXml(evt.text,true)+'</pre></div>',preventBodyReset:true,autoScroll:true};return new Ext.Panel(opts);},exportData:function(evt){var self=evt.gfiPanel;if(!self.tabPanel||!self.tabPanel.activeTab){alert(__('No features available or none-grid display chosen'));return;}
var featureType=self.tabPanel.activeTab.featureType;var store=self.tabPanel.activeTab.store;var exportConfig={CSV:{formatter:'CSVFormatter',fileName:featureType+'.csv',mimeType:'text/csv'},XLS:{formatter:'ExcelFormatter',fileName:featureType+'.xls',mimeType:'application/vnd.ms-excel'}};var config=exportConfig[evt.exportFormat];if(!config){alert(__('Invalid export format configured: '+evt.exportFormat));return;}
var data=Heron.data.DataExporter.formatStore(store,config,true);Heron.data.DataExporter.download(data,config)}});Ext.reg('hr_featureinfopanel',Heron.widgets.FeatureInfoPanel);Ext.namespace("Heron.widgets");Heron.widgets.XMLTreePanel=Ext.extend(Ext.tree.TreePanel,{initComponent:function(){Ext.apply(this,{autoScroll:true,rootVisible:false,root:this.root?this.root:{nodeType:'async',text:'Ext JS',draggable:false,id:'source'}});Heron.widgets.XMLTreePanel.superclass.initComponent.apply(this,arguments);},xmlTreeFromUrl:function(url){var self=this;Ext.Ajax.request({url:url,method:'GET',params:null,success:function(result,request){self.xmlTreeFromDoc(self,result.responseXML);},failure:function(result,request){alert('error in ajax request');}});},xmlTreeFromText:function(self,text){var doc=new OpenLayers.Format.XML().read(text);self.xmlTreeFromDoc(self,doc);return doc;},xmlTreeFromDoc:function(self,doc){self.setRootNode(self.treeNodeFromXml(self,doc.documentElement||doc));},treeNodeFromXml:function(self,XmlEl){var t=((XmlEl.nodeType==3)?XmlEl.nodeValue:XmlEl.tagName);if(t.replace(/\s/g,'').length==0){return null;}
var result=new Ext.tree.TreeNode({text:t});var xmlns='xmlns',xsi='xsi';if(XmlEl.nodeType==1){Ext.each(XmlEl.attributes,function(a){var nodeName=a.nodeName;if(!(XmlEl.parentNode.nodeType==9&&(nodeName.substring(0,xmlns.length)===xmlns||nodeName.substring(0,xsi.length)===xsi))){var c=new Ext.tree.TreeNode({text:a.nodeName});c.appendChild(new Ext.tree.TreeNode({text:a.nodeValue}));result.appendChild(c);}});Ext.each(XmlEl.childNodes,function(el){if((el.nodeType==1)||(el.nodeType==3)){var c=self.treeNodeFromXml(self,el);if(c){result.appendChild(c);}}});}
return result;}});Ext.reg('hr_xmltreepanel',Heron.widgets.XMLTreePanel);Ext.namespace("Heron.widgets");Heron.widgets.HTMLPanel=Ext.extend(Ext.Panel,{initComponent:function(){Heron.widgets.HTMLPanel.superclass.initComponent.call(this);this.addListener('render',function(){this.loadMask=new Ext.LoadMask(this.body,{msg:__('Loading...')})});}});Ext.reg('hr_htmlpanel',Heron.widgets.HTMLPanel);Ext.namespace("Heron.widgets");Heron.widgets.ContextBrowser=(function(){var contexts=undefined;var map=undefined;var instance={init:function(hroptions){},setMapContext:function(contextid,id){var elmm=Ext.getCmp(contextid);contexts=elmm.hropts;if(contexts){var map=Heron.App.getMap();for(var i=0;i<contexts.length;i++){if(contexts[i].id==id){if(contexts[i].x&&contexts[i].y&&contexts[i].zoom){map.setCenter(new OpenLayers.LonLat(contexts[i].x,contexts[i].y),contexts[i].zoom,false,true);}
else if(contexts[i].x&&contexts[i].y&&!contexts[i].zoom){map.setCenter(new OpenLayers.LonLat(contexts[i].x,contexts[i].y),map.getZoom(),false,true);}
else if(!(contexts[i].x&&contexts[i].y)&&contexts[i].zoom){map.setCenter(new OpenLayers.LonLat(map.center.lon,map.center.lat),contexts[i].zoom,false,true);}
if(contexts[i].layers){var mapLayers=map.layers;var ctxLayers=contexts[i].layers;var ctxName=contexts[i].name;if((ctxLayers.length)||(!ctxLayers.length&&ctxName.length)){if(!contexts[i].addLayers){for(var n=0;n<mapLayers.length;n++){if(mapLayers[n].getVisibility()){if(!mapLayers[n].isBaseLayer){mapLayers[n].setVisibility(false);}}}}
for(var m=0;m<ctxLayers.length;m++){for(n=0;n<mapLayers.length;n++){if(mapLayers[n].name==ctxLayers[m]){if(mapLayers[n].isBaseLayer){map.setBaseLayer(mapLayers[n]);}
mapLayers[n].setVisibility(true);}}}
if(map.baseLayer){map.setBaseLayer(map.baseLayer);}}}}}}}};return(instance);})();Heron.widgets.ContextBrowserPanel=Ext.extend(Heron.widgets.HTMLPanel,{initComponent:function(){Heron.widgets.ContextBrowserPanel.superclass.initComponent.call(this);this.title=__('Shortcuts');this.html='<div class="hr-html-panel-body">';var contexts=this.hropts;if(typeof(contexts)!=="undefined"){for(var i=0;i<contexts.length;i++){this.html+='<a href="#" title="'+contexts[i].desc+'" onclick="Heron.widgets.ContextBrowser.setMapContext(\''+this.id+"','"+contexts[i].id+'\'); return false;">'+contexts[i].name+'</a><br/>';}}
this.html+='</div>';Heron.widgets.ContextBrowser.init(contexts);}});Ext.reg('hr_contextbrowserpanel',Heron.widgets.ContextBrowserPanel);Ext.namespace("Heron.widgets");Heron.widgets.LayerTreePanel=Ext.extend(Ext.tree.TreePanel,{title:__('Layers'),textbaselayers:__('Base Layers'),textoverlays:__('Overlays'),lines:false,layerResolutions:{},appliedResolution:0.0,autoScroll:true,initComponent:function(){var treeConfig;if(this.hropts&&this.hropts.tree){treeConfig=this.hropts.tree;}else{treeConfig=[{nodeType:"gx_baselayercontainer",text:this.textbaselayers,expanded:true},{nodeType:"gx_overlaylayercontainer",text:this.textoverlays}]}
treeConfig=new OpenLayers.Format.JSON().write(treeConfig,true);var layerTree=this;var options={border:true,title:this.title,autoScroll:true,containerScroll:true,loader:new Ext.tree.TreeLoader({applyLoader:false,uiProviders:{"layerNodeUI":GeoExt.tree.LayerNodeUI}}),root:{nodeType:"async",children:Ext.decode(treeConfig)},rootVisible:false,enableDD:true,lines:this.lines};Ext.apply(this,options);Heron.widgets.LayerTreePanel.superclass.initComponent.call(this);this.addListener("beforedblclick",this.onBeforeDblClick);this.addListener("afterrender",this.onAfterRender);this.addListener("expandnode",this.onExpandNode);},onBeforeDblClick:function(node,evt){return false;},onExpandNode:function(node){for(var i=0;i<node.childNodes.length;i++){var child=node.childNodes[i];if(child.leaf){this.setNodeEnabling(child,Heron.App.getMap());}}},onAfterRender:function(){var self=this;var map=Heron.App.getMap();self.applyMapMoveEnd();map.events.register('moveend',null,function(evt){self.applyMapMoveEnd();});},applyMapMoveEnd:function(){var map=Heron.App.getMap();if(map){if(map.resolution!=this.appliedResolution){this.setNodeEnabling(this.getRootNode(),map);this.appliedResolution=map.resolution;}}},setNodeEnabling:function(rootNode,map){rootNode.cascade(function(node){var layer=node.layer;if(!layer){return;}
var layerMinResolution=layer.minResolution?layer.minResolution:map.resolutions[map.resolutions.length-1];var layerMaxResolution=layer.maxResolution?layer.maxResolution:map.resolutions[0];node.enable();if(map.resolution<layerMinResolution||map.resolution>layerMaxResolution){node.disable();}});}});Ext.reg('hr_layertreepanel',Heron.widgets.LayerTreePanel);Ext.namespace("Heron.widgets");Heron.widgets.LayerLegendPanel=Ext.extend(GeoExt.LegendPanel,{title:__('Legend'),bodyStyle:'padding:5px',autoScroll:true,defaults:{useScaleParameter:false,baseParams:{}},dynamic:true,initComponent:function(){if(this.hropts){this.prefetchLegends=this.hropts.prefetchLegends;}
Heron.widgets.LayerLegendPanel.superclass.initComponent.call(this);},onRender:function(){Heron.widgets.LayerLegendPanel.superclass.onRender.apply(this,arguments);this.layerStore.addListener("update",this.onUpdateLayerStore,this);},onUpdateLayerStore:function(store,record,index){this.addLegend(record,index);},addLegend:function(record,index){record.store=this.layerStore;var layer=record.getLayer();if(layer.noLegend){layer.hideInLegend=true;}
if(layer.hideInLegend&&!record.get('hideInLegend')){record.set('hideInLegend',true);}
var legend=undefined;if(this.items){legend=this.getComponent(this.getIdForLayer(layer));}
if((this.prefetchLegends&&!legend)||(((layer.map&&layer.visibility)||layer.getVisibility())&&!legend&&!layer.hideInLegend)){Heron.widgets.LayerLegendPanel.superclass.addLegend.apply(this,arguments);this.doLayout();}
this.doLayout();},onListenerDoLayout:function(node){node.doLayout();},listeners:{activate:function(node){this.onListenerDoLayout(this);},expand:function(node){this.onListenerDoLayout(this);}}});Ext.reg('hr_layerlegendpanel',Heron.widgets.LayerLegendPanel);OpenLayers.Control.LoadingPanel=OpenLayers.Class(OpenLayers.Control,{counter:0,maximized:false,visible:true,initialize:function(options){OpenLayers.Control.prototype.initialize.apply(this,[options]);},setVisible:function(visible){this.visible=visible;if(visible){OpenLayers.Element.show(this.div);}else{OpenLayers.Element.hide(this.div);}},getVisible:function(){return this.visible;},hide:function(){this.setVisible(false);},show:function(){this.setVisible(true);},toggle:function(){this.setVisible(!this.getVisible());},addLayer:function(evt){if(evt.layer){evt.layer.events.register('loadstart',this,this.increaseCounter);evt.layer.events.register('loadend',this,this.decreaseCounter);}},removeLayer:function(evt){if(evt.layer){evt.layer.events.unregister('loadstart',this,this.increaseCounter);evt.layer.events.unregister('loadend',this,this.decreaseCounter);}},getWaitText:function(){return __("Waiting for")+' '+this.counter+' '+(this.counter<=1?__('service'):__('services'));},setMap:function(map){OpenLayers.Control.prototype.setMap.apply(this,arguments);this.map.events.register('preaddlayer',this,this.addLayer);this.map.events.register('removelayer',this,this.removeLayer);for(var i=0;i<this.map.layers.length;i++){var layer=this.map.layers[i];layer.events.register('loadstart',this,this.increaseCounter);layer.events.register('loadend',this,this.decreaseCounter);}},increaseCounter:function(){this.counter++;if(this.counter>0){this.div.innerHTML=this.getWaitText();if(!this.maximized&&this.visible){this.maximizeControl();}}},decreaseCounter:function(){if(this.counter>0){this.div.innerHTML=this.getWaitText();this.counter--;}
if(this.counter==0){if(this.maximized&&this.visible){this.minimizeControl();}}},draw:function(){OpenLayers.Control.prototype.draw.apply(this,arguments);return this.div;},minimizeControl:function(evt){this.div.style.display="none";this.maximized=false;if(evt!=null){OpenLayers.Event.stop(evt);}},maximizeControl:function(evt){this.div.style.display="block";this.maximized=true;if(evt!=null){OpenLayers.Event.stop(evt);}},destroy:function(){if(this.map){this.map.events.unregister('preaddlayer',this,this.addLayer);if(this.map.layers){for(var i=0;i<this.map.layers.length;i++){var layer=this.map.layers[i];layer.events.unregister('loadstart',this,this.increaseCounter);layer.events.unregister('loadend',this,this.decreaseCounter);}}}
OpenLayers.Control.prototype.destroy.apply(this,arguments);},CLASS_NAME:"OpenLayers.Control.LoadingPanel"});Ext.namespace("Heron.widgets");Heron.widgets.MapPanelOptsDefaults={center:'0,0',map:{units:'degrees',maxExtent:'-180,-90,180,90',extent:'-180,-90,180,90',maxResolution:0.703125,numZoomLevels:20,zoom:1,allOverlays:false,fractionalZoom:false,permalinks:{paramPrefix:'map',encodeType:false,prettyLayerNames:true},controls:[new OpenLayers.Control.Attribution(),new OpenLayers.Control.ZoomBox(),new OpenLayers.Control.Navigation({dragPanOptions:{enableKinetic:true}}),new OpenLayers.Control.LoadingPanel(),new OpenLayers.Control.PanPanel(),new OpenLayers.Control.ZoomPanel()]}};Heron.widgets.MapPanel=Ext.extend(GeoExt.MapPanel,{initComponent:function(){var gxMapPanelOptions={id:"gx-map-panel",split:false,layers:this.hropts.layers,items:this.items?this.items:[{xtype:"gx_zoomslider",vertical:true,height:150,x:18,y:85,plugins:new GeoExt.ZoomSliderTip({template:__("Scale")+": 1 : {scale}<br>"+
__("Resolution")+": {resolution}<br>"+
__("Zoom")+": {zoom}"})}],bbar:{items:[{id:'map-panel-epsg',text:"",width:80,xtype:"tbtext"},{xtype:'tbseparator'},{id:'x-coord',text:"X:",width:80,xtype:"tbtext"},{id:'y-coord',text:"Y:",width:80,xtype:"tbtext"},{xtype:'tbseparator'},{id:'bbar_measure',text:"",xtype:"tbtext"}]},tbar:new Ext.Toolbar({enableOverflow:true,items:[]})};Ext.apply(gxMapPanelOptions,Heron.widgets.MapPanelOptsDefaults);if(this.hropts.settings){Ext.apply(gxMapPanelOptions.map,this.hropts.settings);}
if(typeof gxMapPanelOptions.map.maxExtent=="string"){gxMapPanelOptions.map.maxExtent=OpenLayers.Bounds.fromString(gxMapPanelOptions.map.maxExtent);gxMapPanelOptions.maxExtent=gxMapPanelOptions.map.maxExtent;}
if(typeof gxMapPanelOptions.map.extent=="string"){gxMapPanelOptions.map.extent=OpenLayers.Bounds.fromString(gxMapPanelOptions.map.extent);gxMapPanelOptions.extent=gxMapPanelOptions.map.extent;}
if(!gxMapPanelOptions.map.center){gxMapPanelOptions.map.center=OpenLayers.LonLat.fromString('0,0');}else if(typeof gxMapPanelOptions.map.center=="string"){gxMapPanelOptions.map.center=OpenLayers.LonLat.fromString(gxMapPanelOptions.map.center);}
gxMapPanelOptions.center=gxMapPanelOptions.map.center;if(gxMapPanelOptions.map.zoom){gxMapPanelOptions.zoom=gxMapPanelOptions.map.zoom;}
if(gxMapPanelOptions.map.controls){gxMapPanelOptions.controls=gxMapPanelOptions.map.controls;}
gxMapPanelOptions.map.layers=this.hropts.layers;Ext.apply(this,gxMapPanelOptions);if(this.map.permalinks){this.prettyStateKeys=this.map.permalinks.prettyLayerNames;this.stateId=this.map.permalinks.paramPrefix;this.permalinkProvider=new GeoExt.state.PermalinkProvider({encodeType:this.map.permalinks.encodeType});Ext.state.Manager.setProvider(this.permalinkProvider);}
Heron.widgets.MapPanel.superclass.initComponent.call(this);Heron.App.setMap(this.getMap());Heron.App.setMapPanel(this);Heron.widgets.ToolbarBuilder.build(this,this.hropts.toolbar);},getPermalink:function(){return this.permalinkProvider.getLink();},getMap:function(){return this.map;},afterRender:function(){Heron.widgets.MapPanel.superclass.afterRender.apply(this,arguments);var xy_precision=3;if(this.hropts&&this.hropts.settings&&this.hropts.settings.xy_precision){xy_precision=this.hropts.settings.xy_precision;}
var onMouseMove=function(e){var lonLat=this.getLonLatFromPixel(e.xy);if(!lonLat){return;}
if(this.displayProjection){lonLat.transform(this.getProjectionObject(),this.displayProjection);}
Ext.getCmp("x-coord").setText("X: "+lonLat.lon.toFixed(xy_precision));Ext.getCmp("y-coord").setText("Y: "+lonLat.lat.toFixed(xy_precision));};var map=this.getMap();map.events.register("mousemove",map,onMouseMove);var epsgTxt=map.getProjection();if(epsgTxt){Ext.getCmp("map-panel-epsg").setText(epsgTxt);}}});Ext.reg('hr_mappanel',Heron.widgets.MapPanel);Ext.namespace("Heron.widgets");Heron.widgets.MenuHandler=(function(){var options=null;function getContainer(){return Ext.getCmp(options.pageContainer);}
function loadPage(page){var container=Ext.getCmp(options.pageContainer);if(page&&container&&options.pageRoot){container.load(options.pageRoot+'/'+page+'.html?t='+new Date().getMilliseconds());}}
function loadURL(url){var container=Ext.getCmp(options.pageContainer);if(url&&container){container.load({url:url,nocache:true,scripts:true});}}
function setActiveCard(card){if(card&&options.cardContainer){Ext.getCmp(options.cardContainer).getLayout().setActiveItem(card);}}
var instance={init:function(hroptions){if(hroptions&&!options){options=hroptions;setActiveCard(options.defaultCard);loadPage(options.defaultPage);}},onSelect:function(item){setActiveCard(item.card);if(item.page){loadPage(item.page);}else if(item.url){loadURL(item.url)}},onLinkSelect:function(card,page){if(card){setActiveCard(card);}
if(page){loadPage(page);}}};return(instance);})();Heron.widgets.MenuPanel=Ext.extend(Ext.Panel,{initComponent:function(){this.addListener('afterrender',function(){if(this.hropts){Heron.widgets.MenuHandler.init(this.hropts);}});Heron.widgets.MenuPanel.superclass.initComponent.apply(this,arguments);}});Ext.reg('hr_menupanel',Heron.widgets.MenuPanel);Ext.namespace("Heron.widgets");Heron.widgets.MultiLayerNode=Ext.extend(GeoExt.tree.LayerNode,{layerNames:[],layers:[],constructor:function(config){if(config.layers){this.layerNames=config.layers.split(",");if(this.layerNames[0]){arguments[0].layer=this.layerNames[0];}}
for(var i=0;i<this.layerNames.length;i++){if(!this.layerStore||this.layerStore=="auto"){this.layerStore=GeoExt.MapPanel.guess().layers;}
var j=this.layerStore.findBy(function(o){return o.get("title")==this.layerNames[i];},this);if(j!=-1){this.layers[i]=this.layerStore.getAt(j).getLayer();}}
Heron.widgets.MultiLayerNode.superclass.constructor.apply(this,arguments);},render:function(bulkRender){this.layer=this.layers[0];Heron.widgets.MultiLayerNode.superclass.render.apply(this,arguments);},onLayerVisibilityChanged:function(){this.layer=this.layers[0];Heron.widgets.MultiLayerNode.superclass.onLayerVisibilityChanged.apply(this,arguments);},onCheckChange:function(node,checked){for(var i=0;i<this.layers.length;i++){this.layer=this.layers[i];Heron.widgets.MultiLayerNode.superclass.onCheckChange.apply(this,arguments);}},onStoreAdd:function(store,records,index){for(var i=0;i<this.layers.length;i++){this.layer=this.layers[i];Heron.widgets.MultiLayerNode.superclass.onStoreAdd.apply(this,arguments);}},onStoreRemove:function(store,record,index){for(var i=0;i<this.layers.length;i++){this.layer=this.layers[i];Heron.widgets.MultiLayerNode.superclass.onStoreRemove.apply(this,arguments);}},onStoreUpdate:function(store,record,operation){for(var i=0;i<this.layers.length;i++){this.layer=this.layers[i];Heron.widgets.MultiLayerNode.superclass.onStoreUpdate.apply(this,arguments);}},destroy:function(){for(var i=0;i<this.layers.length;i++){this.layer=this.layers[i];Heron.widgets.MultiLayerNode.superclass.destroy.apply(this,arguments);}}});Ext.tree.TreePanel.nodeTypes.hr_multilayer=Heron.widgets.MultiLayerNode;Ext.namespace("Heron.widgets");Heron.widgets.OpenLSSearchCombo=Ext.extend(Ext.form.ComboBox,{map:null,width:240,listWidth:400,loadingText:__('Searching...'),emptyText:__('Search with OpenLS'),zoom:8,minChars:4,queryDelay:200,maxRows:'10',url:'http://geodata.nationaalgeoregister.nl/geocoder/Geocoder?',hideTrigger:true,displayField:'text',forceSelection:false,autoSelect:false,queryParam:'zoekterm',initComponent:function(){Heron.widgets.OpenLSSearchCombo.superclass.initComponent.apply(this,arguments);this.store=new Ext.data.Store({proxy:new Ext.data.HttpProxy({url:this.url,method:'GET'}),fields:[{name:"lon",type:"number"},{name:"lat",type:"number"},"text"],reader:new Heron.data.OpenLS_XLSReader()});if(this.zoom>0){this.on("select",function(combo,record,index){this.setValue(record.data.text);var position=new OpenLayers.LonLat(record.data.lon,record.data.lat);position.transform(new OpenLayers.Projection("EPSG:28992"),this.map.getProjectionObject());this.map.setCenter(position,this.zoom);this.collapse();},this);}}});Ext.reg('hr_openlssearchcombo',Heron.widgets.OpenLSSearchCombo);Ext.namespace("Heron.widgets");Heron.widgets.NominatimSearchCombo=Ext.extend(Ext.form.ComboBox,{map:null,width:240,listWidth:400,loadingText:__('Searching...'),emptyText:__('Search Nominatim'),zoom:8,minChars:4,queryDelay:50,maxRows:'10',url:'http://open.mapquestapi.com/nominatim/v1/search?format=json',lang:'en',charset:'UTF8',hideTrigger:true,displayField:'display_name',forceSelection:true,queryParam:'q',initComponent:function(){Heron.widgets.NominatimSearchCombo.superclass.initComponent.apply(this,arguments);this.store=new Ext.data.JsonStore({proxy:new Ext.data.HttpProxy({url:this.url,method:'GET'}),idProperty:'place_id',successProperty:null,totalProperty:null,fields:["place_id","display_name",{name:"lat",type:"number"},{name:"lon",type:"number"}]});if(this.zoom>0){this.on("select",function(combo,record,index){this.setValue(record.data.display_name);var position=new OpenLayers.LonLat(record.data.lon,record.data.lat);position.transform(new OpenLayers.Projection("EPSG:4326"),this.map.getProjectionObject());this.map.setCenter(position,this.zoom);this.collapse();},this);}}});Ext.reg('hr_nominatimsearchcombo',Heron.widgets.NominatimSearchCombo);Ext.namespace("Heron.widgets");Heron.widgets.PrintPreviewWindow=Ext.extend(Ext.Window,{title:__('Print Preview'),printCapabilities:null,modal:true,border:false,resizable:false,width:400,autoHeight:true,layout:'fit',method:'POST',showTitle:true,mapTitle:__('Print Preview Demo'),mapTitleYAML:"mapTitle",showComment:true,mapComment:null,mapCommentYAML:"mapComment",showFooter:true,mapFooter:null,mapFooterYAML:"mapFooter",showRotation:true,showLegend:true,mapLegend:null,showLegendChecked:false,mapLimitScales:true,legendDefaults:{useScaleParameter:true,baseParams:{FORMAT:"image/png"}},initComponent:function(){if(this.hropts){Ext.apply(this,this.hropts);}
if(!this.url){alert(__('No print provider url property passed in hropts.'));return;}
var busyMask=new Ext.LoadMask(Ext.getBody(),{msg:__('Loading print data...')});busyMask.show();var self=this;Ext.Ajax.request({url:this.url+'/info.json',method:'GET',params:null,success:function(result,request){self.printCapabilities=Ext.decode(result.responseText);self.addItems();busyMask.hide();},failure:function(result,request){busyMask.hide();alert(__('Error getting Print options from server: ')+this.url);}});Heron.widgets.PrintPreviewWindow.superclass.initComponent.call(this);},addItems:function(){var legendPanel=new Heron.widgets.LayerLegendPanel({renderTo:document.body,hidden:true,defaults:this.legendDefaults});var self=this;var item=new GeoExt.ux.PrintPreview({autoHeight:true,printMapPanel:{limitScales:this.mapLimitScales,map:{controls:[new OpenLayers.Control.Navigation({zoomBoxEnabled:false,zoomWheelEnabled:(this.showRotation)?true:false}),new OpenLayers.Control.PanPanel()]}},printProvider:{method:this.method,capabilities:this.printCapabilities,listeners:{"print":function(){self.close();},"printexception":function(printProvider,result){alert(__('Error from Print server: ')+result.statusText);}}},sourceMap:this.mapPanel,showTitle:this.showTitle,mapTitle:this.mapTitle,mapTitleYAML:this.mapTitleYAML,showComment:this.showComment,mapComment:this.mapComment,mapCommentYAML:this.mapCommentYAML,showFooter:this.showFooter,mapFooter:this.mapFooter,mapFooterYAML:this.mapFooterYAML,showRotation:this.showRotation,showLegend:this.showLegend,mapLegend:(this.showLegend)?legendPanel:null,showLegendChecked:this.showLegendChecked});if(this.showRotation){var ctrlPanel=new OpenLayers.Control.Zoom();item.printMapPanel.map.addControl(ctrlPanel);}
this.add(item);this.doLayout();this.show();this.center();},listeners:{show:function(node){}}});Ext.reg('hr_printpreviewwindow',Heron.widgets.PrintPreviewWindow);Ext.namespace("Heron.widgets");Heron.widgets.SearchPanel=Ext.extend(GeoExt.form.FormPanel,{onSearchCompleteZoom:11,autoWildCardAttach:false,layerOpts:undefined,defaultProgressLabel:{xtype:"label",id:"progresslabel",style:{marginLeft:'6px',fontFamily:'Verdana, Arial, Helvetica, sans-serif',color:'#0000C0',fontSize:'12px'}},getProgressLabelId:function(){return this.id+"progresslabel";},getProgressLabel:function(){this.get(this.getProgressLabelId());},initComponent:function(){var foundLabel=false;var hropts=this.hropts;Ext.each(this.items,function(item,index){if(item.id&&item.id=='progresslabel'){item.id=this.getProgressLabelId(this);foundLabel=true;}});if(!foundLabel){this.defaultProgressLabel.id=this.getProgressLabelId();this.items.push(this.defaultProgressLabel);}
Ext.apply(this,hropts);Ext.apply(this.initialConfig,hropts);var self=this;this.listeners={actioncomplete:function(form,action){self.action=action;if(self.onSearchComplete){self.onSearchComplete(self,action);}}};Heron.widgets.SearchPanel.superclass.initComponent.call(this);this.addButton({text:__('Search'),handler:function(){self.action=null;self.search(self);if(self.onSearchInProgress){self.onSearchInProgress(self);}},scope:self});},onSearchInProgress:function(searchPanel){searchPanel.features=null;searchPanel.get(searchPanel.id+'progresslabel').setText(__('Searching...'));},onSearchComplete:function(searchPanel,action){searchPanel.form.items.each(function(item){if(searchPanel.autoWildCardAttach&&item.oldValue){item.setValue(item.oldValue);}});var progressLabel=searchPanel.get(searchPanel.id+'progresslabel');if(action&&action.response&&action.response.success()){var features=searchPanel.features=action.response.features;progressLabel.setText(__('Search Completed: ')+(features?features.length:0)+' '+__('Feature(s)'));if(searchPanel.onSearchCompleteAction){var lropts=searchPanel.layerOpts;if(lropts){var map=Heron.App.getMap();for(var l=0;l<lropts.length;l++){if(lropts[l]['layerOn']){var mapLayers=map.getLayersByName(lropts[l]['layerOn']);for(var n=0;n<mapLayers.length;n++){if(mapLayers[n].isBaseLayer){map.setBaseLayer(mapLayers[n]);}else{mapLayers[n].setVisibility(true);}
if(lropts[l]['layerOpacity']){mapLayers[n].setOpacity(lropts[l]['layerOpacity']);}}}}}
searchPanel.onSearchCompleteAction(searchPanel,features);}}else{progressLabel.setText(__('Search Failed'));}},onSearchCompleteAction:function(searchPanel,features){if(features.length==1&&features[0].geometry&&features[0].geometry.getVertices().length==1&&searchPanel.onSearchCompleteZoom){var point=features[0].geometry.getCentroid();var map=Heron.App.getMap();map.setCenter(new OpenLayers.LonLat(point.x,point.y),searchPanel.onSearchCompleteZoom);searchPanel.notifyParentOnSearchComplete(searchPanel,features);return;}
var bbox;for(var i=0;i<features.length;++i){if(features[i]&&features[i].geometry){if(!bbox){bbox=features[i].geometry.getBounds();}else{bbox.extend(features[i].geometry.getBounds());}}}
if(bbox){Heron.App.getMap().zoomToExtent(bbox);}
searchPanel.notifyParentOnSearchComplete(searchPanel,features);},notifyParentOnSearchComplete:function(searchPanel,features){if(searchPanel.parentId){var parent=Ext.getCmp(searchPanel.parentId);if(parent.onSearchSuccess){parent.onSearchSuccess(searchPanel,features);}}},search:function(searchPanel){this.form.items.each(function(item){var name=item.getName();if(searchPanel.autoWildCardAttach&&name.indexOf('__like'||name.indexOf('__ilike'))){item.oldValue=item.getValue();item.setValue('*'+item.getValue()+'*');}});Heron.widgets.SearchPanel.superclass.search.call(this,searchPanel);}});Ext.reg('hr_searchpanel',Heron.widgets.SearchPanel);Ext.namespace("Heron.widgets");Heron.widgets.FeatSelGridPanel=Ext.extend(Ext.grid.GridPanel,{separateSelectionLayer:false,zoomOnFeatureSelect:false,zoomOnRowDoubleClick:true,zoomLevelPointSelect:10,initComponent:function(){var layer=this.layer=new OpenLayers.Layer.Vector(this.title);this.map=Heron.App.getMap();this.map.addLayer(this.layer);Ext.apply(this,this.hropts);var self=this;if(this.zoomOnFeatureSelect){layer.events.on({"featureselected":function(e){self.zoomToFeature(self,e.feature.geometry);},"dblclick":function(e){self.zoomToFeature(self,e.feature.geometry);},"scope":layer});}
var storeFields=[];Ext.each(this.columns,function(column){if(column.dataIndex){storeFields.push({name:column.dataIndex,type:column.type});}
column.sortable=true;});var storeConfig={layer:layer,fields:storeFields};Ext.apply(storeConfig,this.hropts.storeOpts);this.store=new GeoExt.data.FeatureStore(storeConfig);if(!this.sm){this.sm=new GeoExt.grid.FeatureSelectionModel();}
if(this.zoomOnRowDoubleClick){this.on('celldblclick',function(grid,rowIndex,columnIndex,e){var record=grid.getStore().getAt(rowIndex);var feature=record.getFeature();self.zoomToFeature(self,feature.geometry);});}
if(this.ownerCt){this.ownerCt.on('hide',function(){self.hideLayer();});}
if(this.separateSelectionLayer){this.selLayer=new OpenLayers.Layer.Vector(this.title+'_Sel');this.selLayer.styleMap.styles['default']=layer.styleMap.styles['select'];this.selLayer.style=this.selLayer.styleMap.styles['default'].defaultStyle;layer.styleMap.styles['select']=layer.styleMap.styles['default'].clone();layer.styleMap.styles['select'].defaultStyle.fillColor='white';layer.styleMap.styles['select'].defaultStyle.fillOpacity=0.0;this.map.addLayer(this.selLayer);this.map.setLayerIndex(this.selLayer,this.map.layers.length-1);layer.events.on({featureselected:this.updateSelectionLayer,featureunselected:this.updateSelectionLayer,scope:this});}
Heron.widgets.FeatSelGridPanel.superclass.initComponent.call(this);},loadFeatures:function(features){this.showLayer();this.store.loadData(features);},removeFeatures:function(){this.store.removeAll(false);if(this.selLayer){this.selLayer.removeAllFeatures({silent:true});}},showLayer:function(){if(this.layer){if(this.selLayer){this.map.setLayerIndex(this.selLayer,this.map.layers.length-1);this.map.setLayerIndex(this.layer,this.map.layers.length-2);}else{this.map.setLayerIndex(this.layer,this.map.layers.length-1);}
if(!this.layer.getVisibility()){this.layer.setVisibility(true);}
if(this.selLayer&&!this.selLayer.getVisibility()){this.selLayer.setVisibility(true);}}},hideLayer:function(){if(this.layer&&this.layer.getVisibility()){this.layer.setVisibility(false);}
if(this.selLayer&&this.selLayer.getVisibility()){this.selLayer.setVisibility(false);}},zoomToFeature:function(self,geometry){if(!geometry){return;}
if(geometry.getVertices().length==1){var point=geometry.getCentroid();self.map.setCenter(new OpenLayers.LonLat(point.x,point.y),self.zoomLevelPointSelect);}else{self.map.zoomToExtent(geometry.getBounds());}},zoomButtonRenderer:function(){var id=Ext.id();(function(){new Ext.Button({renderTo:id,text:'Zoom'});}).defer(25);return(String.format('<div id="{0}"></div>',id));},updateSelectionLayer:function(evt){this.selLayer.removeAllFeatures({silent:true});var features=this.layer.selectedFeatures;for(var i=0;i<features.length;i++){var feature=features[i].clone();this.selLayer.addFeatures(feature);}}});Ext.reg('hr_featselgridpanel',Heron.widgets.FeatSelGridPanel);Ext.namespace("Heron.widgets");Heron.widgets.FeatSelSearchPanel=Ext.extend(Ext.Panel,{title:__('Search'),initComponent:function(){this.hropts.searchPanel.parentId=this.id;var self=this;Ext.apply(this,{layout:'card',activeItem:0,bbar:[{text:__('< Search'),ref:'../prevButton',disabled:true,handler:function(){self.showSearchPanel(self);}},'->',{text:__('Result >'),ref:'../nextButton',disabled:true,handler:function(){self.showResultGridPanel(self);}}],items:[self.hropts.searchPanel]});if(this.ownerCt){this.ownerCt.fsSearchPanel=this;this.ownerCt.addListener("hide",this.cleanup);this.ownerCt.addListener("show",this.startup);}
Heron.widgets.FeatSelSearchPanel.superclass.initComponent.call(this);},showSearchPanel:function(self){self.getLayout().setActiveItem(0);self.prevButton.disable();self.nextButton.enable();},showResultGridPanel:function(self){self.getLayout().setActiveItem(1);self.prevButton.enable();self.nextButton.disable();},onSearchSuccess:function(searchPanel,features){if(!this.resultPanel){this.resultPanel=new Heron.widgets.FeatSelGridPanel(this.hropts.resultPanel);this.add(this.resultPanel);}
if(features&&features.length>0){this.resultPanel.loadFeatures(features);this.showResultGridPanel(this);}},startup:function(parent){if(parent.fsSearchPanel&&parent.fsSearchPanel.resultPanel){parent.fsSearchPanel.showSearchPanel(parent.fsSearchPanel);parent.fsSearchPanel.resultPanel.showLayer();}},cleanup:function(parent){if(parent.fsSearchPanel&&parent.fsSearchPanel.resultPanel){parent.fsSearchPanel.resultPanel.hideLayer();}}});Ext.reg('hr_featselsearchpanel',Heron.widgets.FeatSelSearchPanel);Ext.namespace("Heron.widgets");Heron.widgets.ToolbarBuilder={};Heron.widgets.ToolbarBuilder.onMeasurementsActivate=function(event){Ext.getCmp("measurelength").measureLastLength=0.0;};Heron.widgets.ToolbarBuilder.onMeasurements=function(event){var units=event.units;var measure=event.measure;var out="";if(event.order==1){out+=__('Length')+": "+measure.toFixed(2)+" "+units;var item=Ext.getCmp("measurelength");item.measureLastLength=0.0;}else{out+=__('Area')+": "+measure.toFixed(2)+" "+units+"&#178;";}
Ext.getCmp("bbar_measure").setText(out);};Heron.widgets.ToolbarBuilder.onMeasurementsPartial=function(event){var units=event.units;var measure=event.measure;var out="";if(event.order==1){out+=__('Length')+": "+measure.toFixed(2)+" "+units;var item=Ext.getCmp("measurelength");item.measureLastLength=measure;}else{out+=__('Area')+": "+measure.toFixed(2)+" "+units+"&#178;";}
Ext.getCmp("bbar_measure").setText(out);};Heron.widgets.ToolbarBuilder.onMeasurementsDeactivate=function(event){Ext.getCmp("bbar_measure").setText("");};Heron.widgets.ToolbarBuilder.defs={baselayer:{options:{id:"baselayercombo"},create:function(mapPanel,options){if(!options.initialConfig){options.initialConfig={};}
options.initialConfig.map=mapPanel.getMap();return new Heron.widgets.BaseLayerCombo(options);}},geocoder:{options:{id:"geocodercombo"},create:function(mapPanel,options){return new Heron.widgets.GeocoderCombo(options);}},scale:{options:{id:"scalecombo"},create:function(mapPanel,options){return new Heron.widgets.ScaleSelectorCombo(options);}},featureinfo:{options:{tooltip:__('Feature information'),iconCls:"icon-getfeatureinfo",enableToggle:true,pressed:false,id:"featureinfo",toggleGroup:"toolGroup",max_features:10},create:function(mapPanel,options){options.control=new OpenLayers.Control.WMSGetFeatureInfo({maxFeatures:options.max_features,queryVisible:true,infoFormat:options.infoFormat?options.infoFormat:"application/vnd.ogc.gml"});return new GeoExt.Action(options);}},pan:{options:{tooltip:__('Pan'),iconCls:"icon-pan",enableToggle:true,pressed:true,control:new OpenLayers.Control.Navigation(),id:"pan",toggleGroup:"toolGroup"},create:function(mapPanel,options){return new GeoExt.Action(options);}},zoomin:{options:{tooltip:__('Zoom in'),iconCls:"icon-zoom-in",enableToggle:true,pressed:false,control:new OpenLayers.Control.ZoomBox({title:__('Zoom in'),out:false}),id:"zoomin",toggleGroup:"toolGroup"},create:function(mapPanel,options){return new GeoExt.Action(options);}},zoomout:{options:{tooltip:__('Zoom out'),iconCls:"icon-zoom-out",enableToggle:true,pressed:false,control:new OpenLayers.Control.ZoomBox({title:__('Zoom out'),out:true}),id:"zoomout",toggleGroup:"toolGroup"},create:function(mapPanel,options){return new GeoExt.Action(options);}},zoomvisible:{options:{tooltip:__('Zoom to full extent'),iconCls:"icon-zoom-visible",enableToggle:false,pressed:false,control:new OpenLayers.Control.ZoomToMaxExtent(),id:"zoomvisible"},create:function(mapPanel,options){return new GeoExt.Action(options);}},zoomprevious:{options:{tooltip:__('Zoom previous'),iconCls:"icon-zoom-previous",enableToggle:false,disabled:true,pressed:false,id:"zoomprevious"},create:function(mapPanel,options){if(!mapPanel.historyControl){mapPanel.historyControl=new OpenLayers.Control.NavigationHistory();mapPanel.getMap().addControl(mapPanel.historyControl);}
options.control=mapPanel.historyControl.previous;return new GeoExt.Action(options);}},zoomnext:{options:{tooltip:__('Zoom next'),iconCls:"icon-zoom-next",enableToggle:false,disabled:true,pressed:false,id:"zoomnext"},create:function(mapPanel,options){if(!mapPanel.historyControl){mapPanel.historyControl=new OpenLayers.Control.NavigationHistory();mapPanel.getMap().addControl(mapPanel.historyControl);}
options.control=mapPanel.historyControl.next;return new GeoExt.Action(options);}},measurelength:{options:{tooltip:__('Measure length'),iconCls:"icon-measure-length",enableToggle:true,pressed:false,measureLastLength:0.0,control:new OpenLayers.Control.Measure(OpenLayers.Handler.Path,{persist:true,immediate:true,displayClass:"olControlMeasureDistance",handlerOptions:{layerOptions:{styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{"Point":{pointRadius:10,graphicName:"square",fillColor:"white",fillOpacity:0.25,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},"Line":{strokeWidth:1,strokeOpacity:1,strokeColor:"#FF0000",strokeDashstyle:"solid"}}})]})})}}}),id:"measurelength",toggleGroup:"toolGroup"},create:function(mapPanel,options){var action=new GeoExt.Action(options);var map=mapPanel.getMap();var controls=map.getControlsByClass("OpenLayers.Control.Measure");for(var i=0;i<controls.length;i++){if(controls[i].displayClass=='olControlMeasureDistance'){controls[i].geodesic=options.geodesic;controls[i].events.register("activate",map,Heron.widgets.ToolbarBuilder.onMeasurementsActivate);controls[i].events.register("measure",map,Heron.widgets.ToolbarBuilder.onMeasurements);controls[i].events.register("measurepartial",map,Heron.widgets.ToolbarBuilder.onMeasurementsPartial);controls[i].events.register("deactivate",map,Heron.widgets.ToolbarBuilder.onMeasurementsDeactivate);break;}}
return action;}},measurearea:{options:{tooltip:__('Measure area'),iconCls:"icon-measure-area",enableToggle:true,pressed:false,control:new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,{persist:true,immediate:true,displayClass:"olControlMeasureArea",handlerOptions:{layerOptions:{styleMap:new OpenLayers.StyleMap({"default":new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{"Point":{pointRadius:10,graphicName:"square",fillColor:"white",fillOpacity:0.25,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},"Polygon":{strokeWidth:1,strokeOpacity:1,strokeColor:"#FF0000",strokeDashstyle:"solid",fillColor:"#FFFFFF",fillOpacity:0.5}}})]})})}}}),id:"measurearea",toggleGroup:"toolGroup"},create:function(mapPanel,options){var action=new GeoExt.Action(options);var map=mapPanel.getMap();var controls=map.getControlsByClass("OpenLayers.Control.Measure");for(var i=0;i<controls.length;i++){if(controls[i].displayClass=='olControlMeasureArea'){controls[i].geodesic=options.geodesic;controls[i].events.register("activate",map,Heron.widgets.ToolbarBuilder.onMeasurementsActivate);controls[i].events.register("measure",map,Heron.widgets.ToolbarBuilder.onMeasurements);controls[i].events.register("measurepartial",map,Heron.widgets.ToolbarBuilder.onMeasurementsPartial);controls[i].events.register("deactivate",map,Heron.widgets.ToolbarBuilder.onMeasurementsDeactivate);break;}}
return action;}},any:{options:{tooltip:__('Anything is allowed here'),text:__('Any valid Toolbar.add() config goes here')},create:function(mapPanel,options){return options;}},search_nominatim:{options:{tooltip:__('Search Nominatim'),id:"search_nominatim"},create:function(mapPanel,options){return new Heron.widgets.NominatimSearchCombo(options);}},namesearch:{options:{id:"namesearch"},create:function(mapPanel,options){return Ext.create(options);}},searchpanel:{options:{id:"searchpanel",tooltip:__('Search'),iconCls:"icon-find",enableToggle:false,pressed:false,searchWindowDefault:{title:__('Search'),layout:"fit",closeAction:"hide",x:100,width:400,height:400}},create:function(mapPanel,options){options.handler=function(){if(!this.searchpanelWindow){var windowOptions=options.searchWindowDefault;Ext.apply(windowOptions,options.searchWindow);this.searchpanelWindow=new Ext.Window(windowOptions);}
this.searchpanelWindow.show();};return new Ext.Action(options);}},printdialog:{options:{id:"hr_printdialog",title:__('Print Dialog'),tooltip:__('Print Dialog Popup with Preview Map'),iconCls:"icon-printer",enableToggle:false,pressed:false,windowTitle:__('Print Preview'),windowWidth:400,method:'POST',url:null,legendDefaults:{useScaleParameter:false,baseParams:{FORMAT:"image/png"}},showTitle:true,mapTitle:__('Print Preview Demo'),mapTitleYAML:"mapTitle",showComment:true,mapComment:null,mapCommentYAML:"mapComment",showFooter:false,mapFooter:null,mapFooterYAML:"mapFooter",showRotation:true,showLegend:true,showLegendChecked:false,mapLimitScales:true},create:function(mapPanel,options){options.handler=function(){var printWindow=new Heron.widgets.PrintPreviewWindow({title:options.windowTitle,modal:true,border:false,resizable:false,width:options.windowWidth,autoHeight:true,hropts:{mapPanel:mapPanel,method:options.method,url:options.url,legendDefaults:options.legendDefaults,showTitle:options.showTitle,mapTitle:options.mapTitle,mapTitleYAML:options.mapTitleYAML,showComment:options.showComment,mapComment:options.mapComment,mapCommentYAML:options.mapCommentYAML,showFooter:options.showFooter,mapFooter:options.mapFooter,mapFooterYAML:options.mapFooterYAML,showRotation:options.showRotation,showLegend:options.showLegend,showLegendChecked:options.showLegendChecked,mapLimitScales:options.mapLimitScales}});};return new Ext.Action(options);}},printdirect:{options:{id:"printdirect",tooltip:__('Print Visible Map Area Directly'),iconCls:"icon-print-direct",enableToggle:false,pressed:false,method:'POST',url:null,mapTitle:__('Print Preview Demo'),mapTitleYAML:"mapTitle",mapComment:__('This is a simple map directly printed.'),mapCommentYAML:"mapComment",mapFooter:null,mapFooterYAML:"mapFooter",mapPrintLayout:"A4",mapPrintDPI:"75",mapPrintLegend:false,legendDefaults:{useScaleParameter:true,baseParams:{FORMAT:"image/png"}}},create:function(mapPanel,options){options.handler=function(){var busyMask=new Ext.LoadMask(Ext.getBody(),{msg:__('Create PDF...')});busyMask.show();Ext.Ajax.request({url:options.url+'/info.json',method:'GET',params:null,success:function(result,request){var printCapabilities=Ext.decode(result.responseText);var printProvider=new GeoExt.data.PrintProvider({method:options.method,capabilities:printCapabilities,customParams:{},listeners:{"printexception":function(printProvider,result){alert(__('Error from Print server: ')+result.statusText);}}});printProvider.customParams[options.mapTitleYAML]=(options.mapTitle)?options.mapTitle:'';printProvider.customParams[options.mapCommentYAML]=(options.mapComment)?options.mapComment:'';printProvider.customParams[options.mapFooterYAML]=(options.mapFooter)?options.mapFooter:'';if((printProvider.layouts.getCount()>1)&&(options.mapPrintLayout)){var index=printProvider.layouts.find('name',options.mapPrintLayout);if(index!=-1){printProvider.setLayout(printProvider.layouts.getAt(index));}}
if((printProvider.dpis.getCount()>1)&&(options.mapPrintDPI)){var index=printProvider.dpis.find('value',options.mapPrintDPI);if(index!=-1){printProvider.setDpi(printProvider.dpis.getAt(index));}}
if(options.mapPrintLegend){var legendPanel=new Heron.widgets.LayerLegendPanel({renderTo:document.body,hidden:true,defaults:options.legendDefaults});}
var printPage=new GeoExt.data.PrintPage({printProvider:printProvider});printPage.fit(mapPanel,true);printProvider.print(mapPanel,printPage,options.mapPrintLegend&&{legend:legendPanel});busyMask.hide();},failure:function(result,request){busyMask.hide();alert(__('Error getting Print options from server: ')+options.url);}});};return new Ext.Action(options);}},coordinatesearch:{options:{id:"coordinatesearch",tooltip:__('Enter coordinates to go to location on map'),iconCls:"icon-map-pin",enableToggle:false,pressed:false,fieldLabelX:__('X'),fieldLabelY:__('Y'),onSearchCompleteZoom:6,iconUrl:null,iconWidth:32,iconHeight:32,localIconFile:'redpin.png'},create:function(mapPanel,options){options.handler=function(){if(!this.coordPopup){this.coordPopup=new Ext.Window({layout:'fit',resizable:false,width:280,height:120,plain:true,pageX:200,pageY:75,closeAction:'hide',title:__('Go to coordinates'),items:new Heron.widgets.CoordSearchPanel({deferredRender:false,border:false,header:false,title:null,onSearchCompleteZoom:options.onSearchCompleteZoom,iconUrl:options.iconUrl,iconWidth:options.iconWidth,iconHeight:options.iconHeight,localIconFile:options.localIconFile,fieldLabelX:options.fieldLabelX,fieldLabelY:options.fieldLabelY})});}
if(this.coordPopup.isVisible()){this.coordPopup.hide()}else{this.coordPopup.show(this);}};return new Ext.Action(options);}}};Heron.widgets.ToolbarBuilder.setItemDef=function(type,createFun,defaultOptions){Heron.widgets.ToolbarBuilder.defs[type].create=createFun;Heron.widgets.ToolbarBuilder.defs[type].options=defaultOptions?defaultOptions:{};};Heron.widgets.ToolbarBuilder.build=function(mapPanel,config){var toolbarItems=[];if(typeof(config)!=="undefined"){for(var i=0;i<config.length;i++){var itemDef=config[i];if(itemDef.type=="-"){toolbarItems.push("-");continue;}
var createFun;var defaultItemDef=Heron.widgets.ToolbarBuilder.defs[itemDef.type];if(itemDef.create){createFun=itemDef.create;}else if(defaultItemDef&&defaultItemDef.create){createFun=defaultItemDef.create;}
if(!createFun){continue;}
var coreOptions={map:mapPanel.getMap(),scope:mapPanel};var defaultItemOptions={};if(defaultItemDef&&defaultItemDef.options){defaultItemOptions=defaultItemDef.options;}
var extraOptions=itemDef.options?itemDef.options:{};var options=Ext.apply(coreOptions,extraOptions,defaultItemOptions);var item=createFun(mapPanel,options);if(item){toolbarItems.push(item);}}}
mapPanel.getTopToolbar().add(toolbarItems);};Ext.namespace("Heron.widgets");Heron.widgets.XMLTreePanel=Ext.extend(Ext.tree.TreePanel,{initComponent:function(){Ext.apply(this,{autoScroll:true,rootVisible:false,root:this.root?this.root:{nodeType:'async',text:'Ext JS',draggable:false,id:'source'}});Heron.widgets.XMLTreePanel.superclass.initComponent.apply(this,arguments);},xmlTreeFromUrl:function(url){var self=this;Ext.Ajax.request({url:url,method:'GET',params:null,success:function(result,request){self.xmlTreeFromDoc(self,result.responseXML);},failure:function(result,request){alert('error in ajax request');}});},xmlTreeFromText:function(self,text){var doc=new OpenLayers.Format.XML().read(text);self.xmlTreeFromDoc(self,doc);return doc;},xmlTreeFromDoc:function(self,doc){self.setRootNode(self.treeNodeFromXml(self,doc.documentElement||doc));},treeNodeFromXml:function(self,XmlEl){var t=((XmlEl.nodeType==3)?XmlEl.nodeValue:XmlEl.tagName);if(t.replace(/\s/g,'').length==0){return null;}
var result=new Ext.tree.TreeNode({text:t});var xmlns='xmlns',xsi='xsi';if(XmlEl.nodeType==1){Ext.each(XmlEl.attributes,function(a){var nodeName=a.nodeName;if(!(XmlEl.parentNode.nodeType==9&&(nodeName.substring(0,xmlns.length)===xmlns||nodeName.substring(0,xsi.length)===xsi))){var c=new Ext.tree.TreeNode({text:a.nodeName});c.appendChild(new Ext.tree.TreeNode({text:a.nodeValue}));result.appendChild(c);}});Ext.each(XmlEl.childNodes,function(el){if((el.nodeType==1)||(el.nodeType==3)){var c=self.treeNodeFromXml(self,el);if(c){result.appendChild(c);}}});}
return result;}});Ext.reg('hr_xmltreepanel',Heron.widgets.XMLTreePanel);Ext.namespace("Heron.widgets");Heron.widgets.GeocoderCombo=Ext.extend(Ext.form.ComboBox,{map:null,emptyText:__('Search'),loadingText:__('Loading...'),srs:"EPSG:4326",zoom:10,layerOpts:undefined,queryDelay:200,valueField:"bounds",displayField:"name",locationField:"lonlat",url:"http://nominatim.openstreetmap.org/search?format=json",queryParam:"q",minChars:3,hideTrigger:true,tooltip:__('Search'),initComponent:function(){if(this.map){this.setMap(this.map);}
if(Ext.isString(this.srs)){this.srs=new OpenLayers.Projection(this.srs);}
if(!this.store){this.store=new Ext.data.JsonStore({root:null,fields:[{name:"name",mapping:"display_name"},{name:"bounds",convert:function(v,rec){var bbox=rec.boundingbox;return[bbox[2],bbox[0],bbox[3],bbox[1]];}},{name:"lonlat",convert:function(v,rec){return[rec.lon,rec.lat];}}],proxy:new Ext.data.ScriptTagProxy({url:this.url,callbackParam:"json_callback"})});}
this.on({added:this.handleAdded,select:this.handleSelect,focus:function(){this.clearValue();this.removeLocationFeature();},scope:this});return Heron.widgets.GeocoderCombo.superclass.initComponent.apply(this,arguments);},handleAdded:function(){if(!this.map){this.setMap(Heron.App.getMap());}},handleSelect:function(combo,rec){var value=this.getValue();if(Ext.isArray(value)){var mapProj=this.map.getProjectionObject();delete this.center;delete this.locationFeature;if(this.zoom<0){this.map.zoomToExtent(OpenLayers.Bounds.fromArray(value).transform(this.srs,mapProj));}else{this.map.setCenter(OpenLayers.LonLat.fromArray(value).transform(this.srs,mapProj),Math.max(this.map.getZoom(),this.zoom));}
this.center=this.map.getCenter();var lonlat=rec.get(this.locationField);if(this.layer&&lonlat){var geom=new OpenLayers.Geometry.Point(this.center.lon,this.center.lat).transform(this.srs,mapProj);this.locationFeature=new OpenLayers.Feature.Vector(geom,rec.data);this.layer.addFeatures([this.locationFeature]);var vm=this.map.getLayersByName(this.layer);if(vm.length===0){this.layer.setVisibility(true);}}
var lropts=this.layerOpts;if(lropts){var map=Heron.App.getMap();for(var l=0;l<lropts.length;l++){if(lropts[l]['layerOn']){var mapLayers=map.getLayersByName(lropts[l]['layerOn']);for(var n=0;n<mapLayers.length;n++){if(mapLayers[n].isBaseLayer){map.setBaseLayer(mapLayers[n]);}else{mapLayers[n].setVisibility(true);}
if(lropts[l]['layerOpacity']){mapLayers[n].setOpacity(lropts[l]['layerOpacity']);}}}}}}
(function(){this.triggerBlur();this.el.blur();}).defer(100,this);},removeLocationFeature:function(){if(this.locationFeature){this.layer.destroyFeatures([this.locationFeature]);}},clearResult:function(){if(this.center&&!this.map.getCenter().equals(this.center)){this.clearValue();}},setMap:function(map){if(map instanceof GeoExt.MapPanel){map=map.map;}
this.map=map;map.events.on({"moveend":this.clearResult,scope:this});},addToMapPanel:Ext.emptyFn,beforeDestroy:function(){this.map.events.un({"moveend":this.clearResult,scope:this});this.removeLocationFeature();delete this.map;delete this.layer;delete this.center;Heron.widgets.GeocoderCombo.superclass.beforeDestroy.apply(this,arguments);},listeners:{render:function(c){c.el.set({qtip:this.tooltip});c.trigger.set({qtip:this.tooltip});}}});Ext.reg("hr_geocodercombo",Heron.widgets.GeocoderCombo);Ext.namespace("Heron.widgets");Heron.widgets.BaseLayerCombo=Ext.extend(Ext.form.ComboBox,{map:null,store:null,width:140,listWidth:140,emptyText:__('Choose a Base Layer'),tooltip:__('BaseMaps'),zoom:8,hideTrigger:false,displayField:'name',forceSelection:true,triggerAction:'all',mode:'local',initComponent:function(){Heron.widgets.BaseLayerCombo.superclass.initComponent.apply(this,arguments);if(this.initialConfig.map!==null&&this.initialConfig.map instanceof OpenLayers.Map&&this.initialConfig.map.allOverlays===false){this.map=this.initialConfig.map;this.store=new GeoExt.data.LayerStore({layers:this.map.getLayersBy('isBaseLayer',true)});this.displayField=this.store.fields.keys[1];this.setValue(this.map.baseLayer.name);this.on('select',function(combo,record,idx){this.map.setBaseLayer(record.getLayer(idx));},this);this.map.events.register('changebaselayer',this,function(obj){this.setValue(obj.layer.name);});}},listeners:{render:function(c){c.el.set({qtip:this.tooltip});c.trigger.set({qtip:this.tooltip});}}});Ext.reg('hr_baselayer_combobox',Heron.widgets.BaseLayerCombo);Ext.namespace("Heron.widgets");Heron.widgets.IFramePanel=Ext.extend(Ext.Panel,{name:'iframe',iframe:null,src:Ext.isIE&&Ext.isSecure?Ext.SSL_SECURE_URL:'about:blank',maskMessage:__('Loading...'),doMask:true,initComponent:function(){this.bodyCfg={tag:'iframe',frameborder:'0',src:this.src,name:this.name};Ext.apply(this,{});Heron.widgets.IFramePanel.superclass.initComponent.apply(this,arguments);this.addListener=this.on;},onRender:function(){Heron.widgets.IFramePanel.superclass.onRender.apply(this,arguments);this.iframe=Ext.isIE?this.body.dom.contentWindow:window.frames[this.name];this.body.dom[Ext.isIE?'onreadystatechange':'onload']=this.loadHandler.createDelegate(this);},loadHandler:function(){this.src=this.body.dom.src;this.removeMask();},getIframe:function(){return this.iframe;},getIframeBody:function(){var b=this.iframe.document.getElementsByTagName('body');if(!Ext.isEmpty(b)){return b[0];}else{return'';}},getUrl:function(){return this.body.dom.src;},setUrl:function(source){this.setMask();this.body.dom.src=source;},resetUrl:function(){this.setMask();this.body.dom.src=this.src;},refresh:function(){if(!this.isVisible()){return;}
this.setMask();this.body.dom.src=this.body.dom.src;},setMask:function(){if(this.doMask){this.el.mask(this.maskMessage);}},removeMask:function(){if(this.doMask){this.el.unmask();}}});Ext.reg('hr_iframePpanel',Heron.widgets.IFramePanel);Ext.namespace("Heron.widgets");Heron.widgets.ScaleSelectorCombo=Ext.extend(Ext.form.ComboBox,{map:null,tpl:'<tpl for="."><div class="x-combo-list-item">1 : {[parseInt(values.scale + 0.5)]}</div></tpl>',editable:false,width:130,listWidth:120,emptyText:__('Scale'),tooltip:__('Scale'),triggerAction:'all',mode:'local',initComponent:function(){Heron.widgets.ScaleSelectorCombo.superclass.initComponent.apply(this,arguments);this.store=new GeoExt.data.ScaleStore({map:this.map});for(var i=0;i<this.store.getCount();i++){this.store.getAt(i).data.formattedScale=parseInt(this.store.getAt(i).data.scale+0.5);}
this.on('select',function(combo,record,index){this.map.zoomTo(record.data.level);},this);this.map.events.register('zoomend',this,this.zoomendUpdate);this.map.events.triggerEvent("zoomend");},listeners:{render:function(c){c.el.set({qtip:this.tooltip});c.trigger.set({qtip:this.tooltip});}},zoomendUpdate:function(record){var scale=this.store.queryBy(function(record){return this.map.getZoom()==record.data.level;});if(scale.length>0){scale=scale.items[0];this.setValue("1 : "+parseInt(scale.data.scale+0.5));}else{if(!this.rendered){return;}
this.clearValue();}},beforeDestroy:function(){this.map.events.unregister('zoomend',this,this.zoomendUpdate);Heron.widgets.ScaleSelectorCombo.superclass.beforeDestroy.apply(this,arguments);}});Ext.reg('hr_scaleselectorcombo',Heron.widgets.ScaleSelectorCombo);Heron.version='0.71';
